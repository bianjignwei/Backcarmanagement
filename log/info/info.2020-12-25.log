2020-12-25 08:54:30 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 08:54:30 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 13084 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 08:54:30 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 08:54:32 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 08:54:32 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 08:54:32 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 08:54:32 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 41 ms. Found 0 Redis repository interfaces.
2020-12-25 08:54:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$425b0107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$444c91df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:34 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:34 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:34 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:34 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 08:54:35 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 08:54:35 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 08:54:35 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 08:54:35 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 08:54:35 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 08:54:35 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5075 ms
2020-12-25 08:54:35 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 08:54:36 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 08:54:36 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 08:54:36 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 08:54:36 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 08:54:37 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 08:54:37 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 08:54:37 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 08:54:37 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 08:54:37 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 08:54:37 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 08:54:39 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 08:54:39 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 08:54:39 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 08:54:39 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 08:54:39 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 08:54:39 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608857679610'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 08:54:39 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 08:54:39 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 08:54:39 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@52f118aa
2020-12-25 08:54:39 febs-shiro INFO  main p6spy 2020-12-25 08:54:39 | 耗时 30 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 08:54:44 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 08:54:44 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 08:54:44 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 08:54:44 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 08:54:44 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 08:54:45 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 08:54:45 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 08:54:45 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 08:54:46 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 08:54:46 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 17.28 seconds (JVM running for 21.095)
2020-12-25 08:54:47 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 08:54:47 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 08:54:47 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608801017168"'s failed in-progress jobs.
2020-12-25 08:54:47 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608857679610 started.
2020-12-25 08:54:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 08:54:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 08:54:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 08:54:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 08:54:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 08:54:48 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 08:54:48 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 08:54:48 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 08:54:50 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 08:54:51 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 08:55:02 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 08:55:02 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 08:55:02 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 08:55:02 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 08:55:02 | 耗时 30 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 08:55:02 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 08:55:02 | 耗时 60 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T08:55:02.501+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 08:55:02 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 08:55:02 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 08:55:02 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 08:55:02 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 08:55:02 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 08:55:02 | 耗时 32 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 08:55:04 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 08:55:04 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 08:55:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 08:55:04 | 耗时 30 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 08:55:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 08:55:04 | 耗时 31 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 08:55:04 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 08:55:04 | 耗时 60 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T08:55:04.628+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 08:55:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 08:55:04 | 耗时 31 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 08:55:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 08:55:04 | 耗时 31 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 08:55:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 08:55:04 | 耗时 28 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 08:59:15 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 08:59:15 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 08:59:15 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 08:59:15 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 08:59:15 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 08:59:15 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 08:59:15 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 08:59:15 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 08:59:15 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 08:59:15 | 耗时 28 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 0,10;
2020-12-25 08:59:21 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 08:59:21 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 08:59:21 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 08:59:21 | 耗时 28 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 10,10;
2020-12-25 08:59:23 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 08:59:23 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 08:59:23 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 08:59:23 | 耗时 28 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 0,10;
2020-12-25 09:02:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 09:02:34 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 09:02:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 09:02:34 | 耗时 29 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 10,10;
2020-12-25 09:02:35 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 09:02:35 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 09:02:35 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 09:02:35 | 耗时 30 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 0,10;
2020-12-25 09:04:53 febs-shiro INFO  http-nio-8080-exec-8 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 09:54:50 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2020-12-25 09:54:50 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2020-12-25 10:54:50 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2020-12-25 10:54:50 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2020-12-25 11:54:50 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2020-12-25 11:54:50 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2020-12-25 13:21:14 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608857679610 paused.
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608857679610 shutting down.
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608857679610 paused.
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608857679610 shutdown complete.
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 13:21:15 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 13:21:20 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 13:21:20 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 17940 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 13:21:20 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 13:21:22 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 13:21:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 13:21:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 13:21:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2020-12-25 13:21:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$deaf1dab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$e0a0ae83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:21:24 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 13:21:24 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 13:21:24 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 13:21:24 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 13:21:25 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 13:21:25 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4486 ms
2020-12-25 13:21:25 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 13:21:25 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 13:21:25 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 13:21:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 13:21:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 13:21:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 13:21:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 13:21:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 13:21:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 13:21:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 13:21:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 13:21:29 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 13:21:29 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 13:21:29 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 13:21:29 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 13:21:29 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 13:21:29 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608873689151'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 13:21:29 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 13:21:29 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 13:21:29 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@53da2aec
2020-12-25 13:21:29 febs-shiro INFO  main p6spy 2020-12-25 13:21:29 | 耗时 37 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 13:21:34 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 13:21:34 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 13:21:34 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 13:21:34 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 13:21:34 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 13:21:35 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 13:21:35 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 13:21:35 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 13:21:36 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 13:21:36 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 16.892 seconds (JVM running for 19.877)
2020-12-25 13:21:37 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 13:21:37 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 13:21:37 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608857679610"'s failed in-progress jobs.
2020-12-25 13:21:38 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608873689151 started.
2020-12-25 13:21:38 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 13:21:38 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 13:21:38 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 13:21:38 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 13:21:38 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 13:21:38 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 13:21:38 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 13:21:38 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Completed initialization in 4 ms
2020-12-25 13:21:40 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 13:21:42 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 13:21:48 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 13:21:49 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:21:49 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:21:49 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:21:49 | 耗时 29 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 13:21:49 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:21:49 | 耗时 176 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T13:21:49.249+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 13:21:49 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:21:49 | 耗时 40 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:21:49 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:21:49 | 耗时 33 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:21:49 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:21:49 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:21:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 13:21:50 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 13:21:51 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:21:51 | 耗时 46 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 13:21:51 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:21:51 | 耗时 48 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 13:21:51 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 13:21:51 | 耗时 72 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T13:21:51.017+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 13:21:51 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:21:51 | 耗时 72 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 13:21:51 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:21:51 | 耗时 63 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 13:21:51 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:21:51 | 耗时 64 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 13:21:54 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 13:21:54 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:21:54 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 13:21:54 | 耗时 32 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:21:54 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 13:21:54 | 耗时 38 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 13:21:54 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 13:21:54 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 13:21:54 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 13:21:54 | 耗时 27 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 0,10;
2020-12-25 13:22:30 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:22:30 | 耗时 78 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 13:23:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:23:05 | 耗时 59 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 0, MENU_NAME = '生成记录', URL = '/system/recordsgenerated', PERMS = 'recordsgenerated:view', ICON = 'layui-icon-save', TYPE = '0', ORDER_NUM = 2, MODIFY_TIME = '2020-12-25T13:23:04.950+0800' WHERE MENU_ID = 180;
2020-12-25 13:23:05 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:23:05 | 耗时 28 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 13:23:05 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 13:23:05 | 耗时 61 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改菜单/按钮', 351, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=180, parentId=0, menuName=生成记录, url=/system/recordsgenerated, perms=recordsgenerated:view, icon=layui-icon-save, type=0, orderNum=2, createTime=null, modifyTime=Fri Dec 25 13:23:04 CST 2020)"', '192.168.3.63', '2020-12-25T13:23:05.105+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 13:23:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 13:23:06 | 耗时 156 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:23:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 13:23:06 | 耗时 37 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:23:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 13:23:06 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:23:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:23:07 | 耗时 132 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:23:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 13:23:07 | 耗时 130 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 13:23:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:23:07 | 耗时 128 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:23:07 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 13:23:07 | 耗时 93 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 13:25:09 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 13:25:09 | 耗时 45 ms | SQL 语句：
SELECT COUNT(1) FROM t_role r WHERE 1 = 1;
2020-12-25 13:25:09 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:25:09 | 耗时 45 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 13:25:09 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 13:25:09 | 耗时 44 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-12-25 13:29:13 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608873689151 paused.
2020-12-25 13:29:13 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 13:29:13 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 13:29:13 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 13:29:13 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608873689151 shutting down.
2020-12-25 13:29:13 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608873689151 paused.
2020-12-25 13:29:13 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608873689151 shutdown complete.
2020-12-25 13:29:14 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 13:29:14 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 13:29:14 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 13:29:14 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 13:29:14 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 13:29:14 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 13:29:21 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 13:29:21 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 18104 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 13:29:21 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 13:29:22 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3e83168e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$4074a766] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:29:24 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 13:29:24 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 13:29:24 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 13:29:24 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 13:29:25 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 13:29:25 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 3504 ms
2020-12-25 13:29:25 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 13:29:25 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 13:29:25 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 13:29:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 13:29:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 13:29:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 13:29:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 13:29:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 13:29:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 13:29:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 13:29:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 13:29:27 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 13:29:27 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 13:29:27 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 13:29:28 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 13:29:28 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 13:29:28 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608874167939'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 13:29:28 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 13:29:28 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 13:29:28 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@673605ef
2020-12-25 13:29:28 febs-shiro INFO  main p6spy 2020-12-25 13:29:28 | 耗时 30 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 13:29:32 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 13:29:32 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 13:29:32 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 13:29:32 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 13:29:32 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 13:29:32 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 13:29:33 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 13:29:33 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 13:29:33 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 13:29:33 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 12.52 seconds (JVM running for 14.165)
2020-12-25 13:29:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 13:29:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 13:29:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 13:29:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 13:29:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 13:29:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 13:29:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 13:29:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608873689151"'s failed in-progress jobs.
2020-12-25 13:29:35 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608874167939 started.
2020-12-25 13:29:35 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 13:29:35 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 13:29:35 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 5 ms
2020-12-25 13:29:35 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 13:29:35 febs-shiro INFO  http-nio-8080-exec-5 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 13:29:39 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 13:29:39 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:29:39 | 耗时 37 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:29:39 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:29:39 | 耗时 30 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 13:29:39 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:29:39 | 耗时 63 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T13:29:39.911+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 13:29:40 | 耗时 34 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 13:29:40 | 耗时 34 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 13:29:40 | 耗时 41 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:29:40 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:29:40 | 耗时 31 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:29:40 | 耗时 31 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:29:40 | 耗时 31 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 13:29:40 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 13:29:40 | 耗时 57 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T13:29:40.768+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:29:40 | 耗时 36 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 13:29:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:29:40 | 耗时 32 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 13:29:45 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:29:45 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 13:29:45 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:29:45 | 耗时 44 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 13:29:45 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:29:45 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 13:31:18 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 13:31:18 | 耗时 53 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 13:31:18 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 13:31:18 | 耗时 215 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608874167939 paused.
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608874167939 shutting down.
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608874167939 paused.
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608874167939 shutdown complete.
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 13:47:45 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 13:58:39 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 13:58:39 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 15128 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 13:58:39 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 13:58:40 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 13:58:40 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 13:58:40 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 13:58:40 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$38a55f0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3a96efe3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 13:58:41 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 13:58:41 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 13:58:41 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 13:58:41 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 13:58:42 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 13:58:42 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2686 ms
2020-12-25 13:58:42 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 13:58:42 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 13:58:42 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 13:58:43 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 13:58:43 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 13:58:43 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 13:58:43 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 13:58:43 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 13:58:43 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 13:58:43 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 13:58:43 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 13:58:45 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 13:58:45 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 13:58:45 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 13:58:45 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 13:58:45 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 13:58:45 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608875925189'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 13:58:45 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 13:58:45 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 13:58:45 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@272c5abd
2020-12-25 13:58:45 febs-shiro INFO  main p6spy 2020-12-25 13:58:45 | 耗时 32 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 13:58:50 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 13:58:50 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 13:58:50 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 13:58:50 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 13:58:50 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 13:58:50 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 13:58:51 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 13:58:51 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 13:58:52 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 13:58:52 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 13.341 seconds (JVM running for 15.281)
2020-12-25 13:58:53 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 13:58:53 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 13:58:53 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608874167939"'s failed in-progress jobs.
2020-12-25 13:58:53 febs-shiro INFO  http-nio-8080-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 13:58:53 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 13:58:53 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 13:58:53 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 13:58:53 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 13:58:53 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 13:58:53 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 13:58:53 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 13:58:53 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 13:58:53 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608875925189 started.
2020-12-25 13:58:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:58:53 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:58:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:58:53 | 耗时 35 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:58:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:58:53 | 耗时 43 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:58:55 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 13:58:59 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 13:58:59 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:58:59 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:58:59 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:58:59 | 耗时 30 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 13:58:59 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:58:59 | 耗时 81 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T13:58:59.343+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 13:58:59 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:58:59 | 耗时 40 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:58:59 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:58:59 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:58:59 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:58:59 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:58:59 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:58:59 | 耗时 41 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 13:59:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 13:59:00 | 耗时 32 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 13:59:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 13:59:00 | 耗时 31 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 13:59:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 13:59:00 | 耗时 31 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 13:59:00 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 13:59:00 | 耗时 62 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T13:59:00.073+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 13:59:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 13:59:00 | 耗时 31 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 13:59:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 13:59:00 | 耗时 30 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 13:59:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:59:01 | 耗时 35 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:59:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:59:01 | 耗时 35 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:59:01 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 13:59:01 | 耗时 31 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 13:59:01 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:59:01 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 13:59:01 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 13:59:01 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 13:59:15 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 13:59:15 | 耗时 37 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:59:15 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 13:59:15 | 耗时 30 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 13:59:16 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:59:16 | 耗时 54 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 13:59:16 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 13:59:16 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 13:59:16 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 13:59:16 | 耗时 88 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 13:59:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:59:49 | 耗时 33 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:59:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:59:49 | 耗时 39 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:59:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 13:59:49 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:59:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 13:59:49 | 耗时 57 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 13:59:49 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 13:59:49 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 13:59:49 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 13:59:49 | 耗时 34 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 13:59:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 13:59:50 | 耗时 33 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 13:59:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:59:57 | 耗时 32 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 13:59:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:59:57 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 13:59:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:59:57 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 13:59:57 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 13:59:57 | 耗时 39 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 13:59:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:59:57 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 13:59:57 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 13:59:57 | 耗时 49 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 13:59:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 13:59:57 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:00:16 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:00:16 | 耗时 36 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:00:16 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:00:16 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:00:16 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:00:16 | 耗时 33 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:00:16 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:00:16 | 耗时 37 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:00:16 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:00:16 | 耗时 37 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:00:16 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:00:16 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:00:16 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:00:16 | 耗时 47 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:00:29 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:00:29 | 耗时 31 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:00:29 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:00:29 | 耗时 31 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:00:29 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:00:29 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:00:29 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:00:29 | 耗时 33 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:00:29 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:00:29 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:00:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:00:29 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:00:30 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:00:30 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:02:28 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:02:28 | 耗时 78 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:02:28 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:02:28 | 耗时 32 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:02:28 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:02:28 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:02:29 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:02:29 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:02:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:02:29 | 耗时 55 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:02:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:02:29 | 耗时 65 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:02:29 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:02:29 | 耗时 82 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:04:01 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:04:01 | 耗时 35 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:04:01 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:04:01 | 耗时 59 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:04:01 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:04:01 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:04:02 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:04:02 | 耗时 38 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:04:02 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:04:02 | 耗时 39 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:04:02 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:04:02 | 耗时 42 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:04:02 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:04:02 | 耗时 47 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:04:38 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:04:38 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:04:38 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:04:38 | 耗时 49 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:04:38 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:04:38 | 耗时 37 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:04:38 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:04:38 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:04:38 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:04:38 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:04:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:04:38 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:04:38 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:04:38 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:04:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:04:53 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:04:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:04:53 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:04:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:04:53 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:04:53 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:04:53 | 耗时 43 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:04:53 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:04:53 | 耗时 29 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:04:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:04:53 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:04:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:04:53 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:05:00 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:05:00 | 耗时 31 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:05:00 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:05:00 | 耗时 36 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:05:00 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:05:00 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:05:00 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:05:00 | 耗时 99 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:05:00 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:05:00 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:05:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:05:00 | 耗时 41 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:05:00 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:05:00 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:05:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:05:26 | 耗时 36 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:05:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:05:26 | 耗时 38 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:05:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:05:26 | 耗时 39 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:05:26 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:05:26 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:05:26 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:05:26 | 耗时 38 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:05:26 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:05:26 | 耗时 33 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:05:26 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:05:26 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:05:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:05:41 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:05:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:05:41 | 耗时 33 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:05:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:05:41 | 耗时 32 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:05:42 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:05:42 | 耗时 47 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:05:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:05:42 | 耗时 40 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:05:42 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:05:42 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:05:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:05:42 | 耗时 45 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:06:31 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:06:31 | 耗时 44 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:06:31 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:06:31 | 耗时 31 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:06:31 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:06:31 | 耗时 45 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:06:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:06:32 | 耗时 35 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:06:32 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:06:32 | 耗时 40 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:06:32 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:06:32 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:06:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:06:32 | 耗时 46 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608875925189 paused.
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608875925189 shutting down.
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608875925189 paused.
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608875925189 shutdown complete.
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 14:11:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 14:11:09 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 14:11:09 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 14:35:36 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 14:35:36 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 16244 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 14:35:36 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 14:35:37 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 14:35:37 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 14:35:37 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 14:35:37 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2da0f361] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2f928439] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 14:35:39 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 14:35:39 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 14:35:39 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 14:35:39 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 14:35:39 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 14:35:39 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2703 ms
2020-12-25 14:35:39 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 14:35:39 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 14:35:39 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 14:35:40 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 14:35:40 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 14:35:40 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 14:35:40 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 14:35:40 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 14:35:40 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 14:35:40 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 14:35:40 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 14:35:41 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 14:35:42 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 14:35:42 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 14:35:42 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 14:35:42 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 14:35:42 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608878141995'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 14:35:42 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 14:35:42 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 14:35:42 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7d2be319
2020-12-25 14:35:42 febs-shiro INFO  main p6spy 2020-12-25 14:35:42 | 耗时 26 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 14:35:46 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 14:35:46 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 14:35:46 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 14:35:46 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 14:35:46 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 14:35:46 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 14:35:47 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 14:35:47 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 14:35:47 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 14:35:47 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 11.4 seconds (JVM running for 13.074)
2020-12-25 14:35:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 14:35:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 14:35:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 14:35:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 14:35:48 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 14:35:48 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 14:35:48 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 14:35:48 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608875925189"'s failed in-progress jobs.
2020-12-25 14:35:48 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608878141995 started.
2020-12-25 14:35:48 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 14:35:48 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 14:35:48 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 14:35:49 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 14:35:50 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 14:35:55 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 14:35:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:35:55 | 耗时 43 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:35:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:35:55 | 耗时 43 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 14:35:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:35:55 | 耗时 94 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T14:35:55.377+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 14:35:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:35:55 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:35:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:35:55 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:35:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:35:55 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:35:56 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:35:56 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:35:56 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:35:56 | 耗时 36 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 14:35:56 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 14:35:56 | 耗时 61 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T14:35:56.268+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 14:35:56 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:35:56 | 耗时 27 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 14:35:56 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:35:56 | 耗时 26 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 14:35:56 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:35:56 | 耗时 26 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 14:35:56 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:35:56 | 耗时 26 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 14:35:57 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:35:57 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:35:57 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:35:57 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:35:57 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:35:57 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:35:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:35:57 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 14:35:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:35:57 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 14:36:09 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:36:09 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:36:10 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:36:10 | 耗时 35 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:36:10 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:36:10 | 耗时 32 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:36:10 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:36:10 | 耗时 33 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:36:10 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:36:10 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:36:10 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:36:10 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:36:10 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:36:10 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:40:03 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:40:03 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:40:03 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:40:03 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:40:03 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:40:03 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:40:03 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:40:03 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:40:03 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:40:03 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:40:03 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:40:03 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:40:03 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:40:03 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:41:06 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:41:06 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:41:06 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:41:06 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:41:06 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:41:06 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:41:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:41:06 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:41:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:41:06 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:41:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:41:06 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:41:06 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:41:06 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:41:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:41:13 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:41:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:41:13 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:41:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:41:13 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:41:14 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:41:14 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:41:14 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:41:14 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:41:14 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:41:14 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:41:14 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:41:14 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:41:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:41:40 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:41:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:41:40 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:41:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:41:40 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:41:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:41:41 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:41:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:41:41 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:41:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:41:41 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:41:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:41:41 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:42:00 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:42:00 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:42:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:42:01 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:42:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:42:01 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:42:01 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:42:01 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:42:01 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:42:01 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:42:01 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:42:01 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:42:01 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:42:01 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:42:32 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:42:32 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:42:32 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:42:32 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:42:32 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:42:32 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:42:32 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:42:32 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:42:32 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:42:32 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:42:32 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:42:32 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:42:32 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:42:32 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:43:17 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:43:17 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:43:17 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:43:17 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:43:17 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:43:17 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:43:18 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:43:18 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:43:18 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:43:18 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:43:18 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:43:18 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:43:18 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:43:18 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:43:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:43:29 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:43:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:43:29 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY createTime ASC LIMIT 0,10;
2020-12-25 14:43:31 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:43:31 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:43:31 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:43:31 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:43:31 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:43:31 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:43:32 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:43:32 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:43:32 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:43:32 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:43:32 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:43:32 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:43:32 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:43:32 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:44:02 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:44:02 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:44:02 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:44:02 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:44:02 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:44:02 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:44:02 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:44:02 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:44:02 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:44:02 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:44:02 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:44:02 | 耗时 31 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:44:02 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:44:02 | 耗时 40 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:53:33 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:53:33 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:53:33 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:53:33 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:53:33 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:53:33 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:53:33 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:53:33 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:53:33 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:53:33 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:53:33 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:53:33 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:53:33 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:53:33 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:53:51 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:53:51 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:53:51 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:53:51 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:53:51 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:53:51 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:53:52 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:53:52 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:53:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:53:52 | 耗时 24 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:53:52 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:53:52 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:53:52 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:53:52 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:54:33 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:54:33 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:54:33 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:54:33 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:54:33 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:54:33 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:54:33 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:54:33 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:54:33 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:54:33 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:54:33 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:54:33 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:54:33 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:54:33 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:54:43 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:54:43 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:54:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:54:44 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:54:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:54:44 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:54:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:54:44 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:54:44 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:54:44 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:54:44 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:54:44 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:54:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:54:44 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:54:56 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:54:56 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:54:56 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:54:56 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:54:56 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:54:56 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:54:57 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:54:57 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:54:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:54:57 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:54:57 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:54:57 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:54:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:54:57 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:55:07 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:55:07 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:55:07 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:55:07 | 耗时 33 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:55:07 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:55:07 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:55:08 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:08 | 耗时 42 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:55:08 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:55:08 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:55:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:55:08 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:55:08 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:55:08 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:55:14 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:55:14 | 耗时 31 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:55:14 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:55:14 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:55:14 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:55:14 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:55:15 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:55:15 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:55:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:55:15 | 耗时 24 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:55:15 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:55:15 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:55:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:55:15 | 耗时 33 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:55:24 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:55:24 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:55:24 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:55:24 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:55:25 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:55:25 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:55:25 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:55:25 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:55:25 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:55:25 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:55:25 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:55:25 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:55:25 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:55:25 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:55:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:29 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:55:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:29 | 耗时 47 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:55:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:29 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:55:29 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:55:29 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:55:29 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:55:29 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:55:30 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:55:30 | 耗时 30 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:55:30 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:55:30 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:55:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:55:34 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:55:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:55:34 | 耗时 33 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:55:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:55:34 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:55:34 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:55:34 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:55:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:55:34 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:55:34 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:55:34 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:55:34 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:55:34 | 耗时 32 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:55:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:41 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:55:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:41 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:55:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:41 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:55:41 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:55:41 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:55:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:55:41 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:55:41 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:55:41 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:55:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:55:41 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:55:48 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:55:48 | 耗时 33 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:55:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:55:49 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:55:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:55:49 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:55:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:55:49 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:55:49 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:49 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:55:49 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:55:49 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:55:49 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:55:49 | 耗时 29 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:55:59 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:55:59 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:55:59 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:55:59 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:56:00 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:56:00 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:56:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:56:00 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:56:00 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:56:00 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:56:00 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:56:00 | 耗时 33 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:56:00 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:56:00 | 耗时 30 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:56:13 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:56:13 | 耗时 44 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:56:13 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:56:13 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:56:13 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:56:13 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:56:13 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:56:13 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:56:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:56:13 | 耗时 24 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:56:13 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:56:13 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:56:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:56:13 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:56:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:56:27 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:56:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:56:27 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:56:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:56:27 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:56:27 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:56:27 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:56:27 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:56:27 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:56:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:56:27 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:56:27 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:56:27 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:56:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:56:34 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:56:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:56:34 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:56:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:56:34 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:56:34 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:56:34 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:56:34 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:56:34 | 耗时 38 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:56:35 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:56:35 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:56:35 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:56:35 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:56:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:56:41 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:56:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:56:41 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:56:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:56:41 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:56:41 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:56:41 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:56:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:56:41 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:56:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:56:41 | 耗时 24 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:56:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:56:41 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:56:46 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:56:46 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:56:46 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:56:46 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:56:46 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:56:46 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:56:46 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:56:46 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:56:46 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:56:46 | 耗时 32 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:56:46 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:56:46 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:56:46 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:56:46 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:56:52 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:56:52 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:56:52 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:56:52 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:56:52 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:56:52 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:56:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:56:53 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:56:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:56:53 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:56:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:56:53 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:56:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:56:53 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:56:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:56:58 | 耗时 31 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:56:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:56:58 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:56:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:56:58 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:56:58 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:56:58 | 耗时 36 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:56:58 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:56:58 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:56:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:56:58 | 耗时 38 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:56:58 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:56:58 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:57:08 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:08 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:57:08 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:08 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:57:08 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:08 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:57:08 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:57:08 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:57:08 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:57:08 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:57:08 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:57:08 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:57:08 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:57:08 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:57:12 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:57:12 | 耗时 33 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:57:12 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:57:12 | 耗时 34 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:57:12 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:57:12 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:57:12 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:57:12 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:57:12 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:57:12 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:57:12 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:12 | 耗时 29 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:57:12 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 14:57:12 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:57:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:57:16 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:57:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:57:16 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:57:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:57:16 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:57:16 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:57:16 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:57:16 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:57:16 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:57:16 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:57:16 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:57:16 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:57:16 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:57:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:22 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:57:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:22 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:57:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:22 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:57:22 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:57:22 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:57:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:57:22 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:57:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:57:22 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:57:22 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:57:22 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:57:26 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:57:26 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:57:26 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:57:26 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:57:26 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:57:26 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:57:26 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:26 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:57:26 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:57:26 | 耗时 24 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:57:26 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:57:26 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:57:26 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:57:26 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:57:29 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:57:29 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:57:29 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:57:29 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:57:29 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:57:29 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:57:30 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 14:57:30 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:57:30 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:57:30 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:57:30 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:57:30 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:57:30 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 14:57:30 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:57:35 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:57:35 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:57:35 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:57:35 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:57:35 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 14:57:35 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:57:36 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:57:36 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:57:36 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 14:57:36 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:57:36 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:57:36 | 耗时 24 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:57:36 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 14:57:36 | 耗时 39 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 14:57:42 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:57:42 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 14:57:42 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:57:42 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 14:57:42 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 14:57:42 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 14:57:43 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 14:57:43 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 14:57:43 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 14:57:43 | 耗时 24 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 14:57:43 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:57:43 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 14:57:43 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 14:57:43 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:04:34 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-12-25 15:06:43 febs-shiro INFO  http-nio-8080-exec-8 cc.mrbird.febs.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-12-25 15:07:49 febs-shiro INFO  http-nio-8080-exec-4 cc.mrbird.febs.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-12-25 15:07:53 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-12-25 15:07:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:07:53 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:07:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:07:53 | 耗时 29 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:07:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:07:53 | 耗时 66 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:07:53.811+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Firefox 84');
2020-12-25 15:07:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:07:53 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:07:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:07:53 | 耗时 31 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:07:54 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:07:54 | 耗时 33 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:07:54 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:07:54 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:07:54 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:07:54 | 耗时 28 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:07:54 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:07:54 | 耗时 30 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:07:54 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 15:07:54 | 耗时 52 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:07:54.791+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:07:54 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:07:54 | 耗时 30 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:07:54 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:07:54 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:07:54 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:07:54 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608878141995 paused.
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608878141995 shutting down.
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608878141995 paused.
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608878141995 shutdown complete.
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 15:08:45 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 15:08:51 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 15:08:51 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 17296 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 15:08:51 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f04fe830] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f2417908] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:52 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:08:53 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 15:08:53 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 15:08:53 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 15:08:53 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 15:08:53 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 15:08:53 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2593 ms
2020-12-25 15:08:54 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 15:08:54 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 15:08:54 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 15:08:54 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 15:08:54 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 15:08:55 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 15:08:55 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 15:08:55 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 15:08:55 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 15:08:55 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 15:08:55 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 15:08:56 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 15:08:56 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 15:08:56 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 15:08:56 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 15:08:56 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 15:08:56 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608880136583'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 15:08:56 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 15:08:56 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 15:08:56 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@102c24d1
2020-12-25 15:08:56 febs-shiro INFO  main p6spy 2020-12-25 15:08:56 | 耗时 30 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 15:09:00 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 15:09:00 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 15:09:00 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 15:09:00 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 15:09:00 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 15:09:00 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 15:09:01 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 15:09:01 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 15:09:01 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 15:09:01 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 10.878 seconds (JVM running for 12.736)
2020-12-25 15:09:02 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 15:09:02 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 15:09:02 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 15:09:02 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 15:09:02 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 15:09:02 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 15:09:02 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880136583 started.
2020-12-25 15:09:02 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 15:09:02 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 15:09:02 febs-shiro INFO  RMI TCP Connection(1)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 15:09:03 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 15:09:04 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 15:09:07 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 15:09:07 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:09:07 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:09:07 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:09:07 | 耗时 29 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:09:07 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:09:07 | 耗时 61 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:09:07.854+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:09:08 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:09:08 | 耗时 31 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:09:08 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:09:08 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:09:08 | 耗时 27 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:09:08 | 耗时 40 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:09:08 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 15:09:08 | 耗时 70 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:09:08.602+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:09:08 | 耗时 28 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:09:08 | 耗时 27 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:09:08 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:09:08 | 耗时 28 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:09:18 febs-shiro INFO  QuartzScheduler_FEBS_Scheduler-LAPTOP-2ADCHJEL1608880136583_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 15:09:18 febs-shiro INFO  QuartzScheduler_FEBS_Scheduler-LAPTOP-2ADCHJEL1608880136583_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608878141995"'s failed in-progress jobs.
2020-12-25 15:10:14 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:10:14 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:10:14 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:10:14 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:10:14 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:10:14 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:10:15 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:10:15 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:10:15 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:10:15 | 耗时 24 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:10:15 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:10:15 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:10:17 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:10:17 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:10:17 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:10:17 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 15:10:17 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:10:17 | 耗时 25 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 0,10;
2020-12-25 15:10:25 febs-shiro INFO  http-nio-8080-exec-10 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 15:10:29 febs-shiro INFO  http-nio-8080-exec-5 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 15:10:29 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:10:29 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:10:29 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:10:29 | 耗时 28 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:10:30 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:10:30 | 耗时 60 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:10:29.981+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 15:10:30 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:10:30 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:10:30 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:10:30 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:10:30 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:10:30 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:10:31 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:10:31 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:10:31 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:10:31 | 耗时 25 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:10:31 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:10:31 | 耗时 25 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:10:31 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 15:10:31 | 耗时 58 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:10:31.159+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:10:31 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:10:31 | 耗时 25 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:10:31 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:10:31 | 耗时 25 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:10:31 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:10:31 | 耗时 25 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:10:50 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880136583 paused.
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880136583 shutting down.
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880136583 paused.
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880136583 shutdown complete.
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 15:10:51 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 15:10:54 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 15:10:54 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 20176 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 15:10:54 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 15:10:55 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 15:10:55 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 15:10:55 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 15:10:55 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d2e72eff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$d4d8bfd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:10:56 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 15:10:56 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 15:10:56 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 15:10:56 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 15:10:57 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 15:10:57 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2799 ms
2020-12-25 15:10:57 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 15:10:57 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 15:10:57 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 15:10:57 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 15:10:57 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 15:10:58 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 15:10:58 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 15:10:58 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 15:10:58 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 15:10:58 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 15:10:58 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 15:10:59 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 15:10:59 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 15:10:59 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 15:10:59 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 15:10:59 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 15:10:59 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608880259770'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 15:10:59 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 15:10:59 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 15:10:59 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@64381526
2020-12-25 15:10:59 febs-shiro INFO  main p6spy 2020-12-25 15:10:59 | 耗时 29 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 15:11:03 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 15:11:04 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 15:11:04 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 15:11:04 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 15:11:04 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 15:11:04 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 15:11:04 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 15:11:04 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 15:11:05 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 15:11:05 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 11.489 seconds (JVM running for 13.179)
2020-12-25 15:11:06 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 15:11:06 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 15:11:06 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 15:11:06 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 15:11:06 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 15:11:06 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 15:11:06 febs-shiro INFO  RMI TCP Connection(3)-192.168.3.63 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 15:11:06 febs-shiro INFO  RMI TCP Connection(3)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 15:11:06 febs-shiro INFO  RMI TCP Connection(3)-192.168.3.63 org.springframework.web.servlet.DispatcherServlet Completed initialization in 3 ms
2020-12-25 15:11:06 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880259770 started.
2020-12-25 15:11:06 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 15:11:07 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 2 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 15:11:10 febs-shiro INFO  http-nio-8080-exec-4 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 2 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 15:11:10 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:11:10 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:11:10 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:11:10 | 耗时 30 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:11:11 | 耗时 58 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:11:10.934+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:11:11 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:11:11 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:11:11 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:11:11 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:11:11 | 耗时 27 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:11:11 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 15:11:11 | 耗时 57 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:11:11.621+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:11:11 | 耗时 28 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:11:11 | 耗时 28 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:11:11 | 耗时 28 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:11:11 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:11:11 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:11:21 febs-shiro INFO  QuartzScheduler_FEBS_Scheduler-LAPTOP-2ADCHJEL1608880259770_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 15:11:21 febs-shiro INFO  QuartzScheduler_FEBS_Scheduler-LAPTOP-2ADCHJEL1608880259770_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608880136583"'s failed in-progress jobs.
2020-12-25 15:11:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:11:49 | 耗时 35 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:11:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:11:49 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:11:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:11:49 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:11:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:11:49 | 耗时 35 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:11:49 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:11:49 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:11:49 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:11:49 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:11:49 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:11:49 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:12:21 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:12:21 | 耗时 33 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:12:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:12:21 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:12:21 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:12:21 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:12:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:12:21 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:12:56 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 15:12:59 febs-shiro INFO  http-nio-8080-exec-8 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 15:12:59 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:12:59 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:12:59 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:12:59 | 耗时 28 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:12:59 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:12:59 | 耗时 61 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:12:59.428+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 15:12:59 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:12:59 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:12:59 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:12:59 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:12:59 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:12:59 | 耗时 32 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:13:00 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:13:00 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:13:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:13:00 | 耗时 28 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:13:00 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 15:13:00 | 耗时 58 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:13:00.598+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:13:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:13:00 | 耗时 27 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:13:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:13:00 | 耗时 27 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:13:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:13:00 | 耗时 27 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:13:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:13:00 | 耗时 27 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:13:01 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:13:01 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:13:01 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:13:01 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:13:01 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:13:01 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:13:25 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:13:25 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:13:25 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:13:25 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:13:25 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:13:25 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:13:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:13:26 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:13:26 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:13:26 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:13:26 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:13:26 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:13:26 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:13:26 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:14:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:14:03 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:14:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:14:03 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:14:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:14:03 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:14:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:14:03 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:14:03 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:14:03 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:14:03 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:14:03 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:14:03 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:14:03 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:14:24 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:14:24 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:14:24 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:14:24 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:14:24 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:14:24 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:14:24 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:14:24 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:14:24 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:14:24 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:14:24 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:14:24 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:14:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:14:24 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:14:50 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:14:50 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:14:51 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:14:51 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:14:51 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:14:51 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:14:51 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:14:51 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:14:51 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:14:51 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:14:51 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:14:51 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:14:51 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:14:51 | 耗时 31 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:15:00 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:15:00 | 耗时 48 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:15:00 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:15:00 | 耗时 44 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:15:00 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:15:00 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:15:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:15:01 | 耗时 112 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:15:01 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:15:01 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:15:01 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:15:01 | 耗时 109 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:15:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:15:01 | 耗时 63 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:15:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:15:07 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:15:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:15:07 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:15:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:15:07 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:15:07 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:15:07 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:15:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:15:07 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:15:07 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:15:07 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:15:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:15:07 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:16:12 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:16:12 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:16:12 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:16:12 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:16:12 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:16:12 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:16:13 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:16:13 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:16:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:16:13 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:16:13 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:16:13 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:16:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:16:13 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:16:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:16:42 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:16:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:16:42 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:16:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:16:42 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:16:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:16:42 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:16:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:16:42 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:16:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:16:42 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:16:42 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:16:42 | 耗时 31 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:17:35 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:17:35 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:17:35 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:17:35 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:17:36 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:17:36 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:17:36 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:17:36 | 耗时 33 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:17:36 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:17:36 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:17:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:17:36 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:17:36 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:17:36 | 耗时 30 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:17:48 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:17:48 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:17:48 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:17:48 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:17:48 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:17:48 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:17:49 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:17:49 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:17:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:17:49 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:17:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:17:49 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:17:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:17:49 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:21:31 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:21:31 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:21:31 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:21:31 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:21:31 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:21:31 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:21:31 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:21:31 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:21:31 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:21:31 | 耗时 31 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:21:31 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:21:31 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:21:31 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:21:31 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:21:35 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 15:21:39 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 15:21:39 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:21:39 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:21:39 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:21:39 | 耗时 28 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:21:39 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:21:39 | 耗时 65 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:21:39.235+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 15:21:39 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:21:39 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:21:39 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:21:39 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:21:39 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:21:39 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:21:40 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:21:40 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:21:40 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:21:40 | 耗时 28 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:21:40 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:21:40 | 耗时 30 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:21:40 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:21:40 | 耗时 28 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:21:40 febs-shiro INFO  Febs-Async-Thread3 p6spy 2020-12-25 15:21:40 | 耗时 56 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:21:40.652+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:21:40 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:21:40 | 耗时 27 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:21:40 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:21:40 | 耗时 27 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:21:42 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:21:42 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:21:42 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:21:42 | 耗时 32 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:21:42 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:21:42 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:22:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:22:15 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:22:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:22:15 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:22:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:22:15 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:22:16 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:22:16 | 耗时 34 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:22:16 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:22:16 | 耗时 29 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:22:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:22:16 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:22:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:22:16 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:22:18 febs-shiro INFO  http-nio-8080-exec-7 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 2 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 15:22:22 febs-shiro INFO  http-nio-8080-exec-10 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 2 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 15:22:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:22:22 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:22:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:22:22 | 耗时 27 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:22:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:22:22 | 耗时 56 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:22:22.683+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 15:22:22 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:22:22 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:22:22 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:22:22 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:22:22 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:22:22 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:22:23 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:22:23 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:22:23 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:22:23 | 耗时 28 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:22:24 febs-shiro INFO  Febs-Async-Thread4 p6spy 2020-12-25 15:22:24 | 耗时 55 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:22:23.955+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:22:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:22:24 | 耗时 28 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:22:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:22:24 | 耗时 28 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:22:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:22:24 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:22:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:22:24 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:22:25 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:22:25 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:22:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:22:25 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:22:25 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:22:25 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:23:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:23:24 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:23:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:23:24 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:23:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:23:24 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:23:25 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:23:25 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:23:25 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:23:25 | 耗时 31 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:23:25 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:23:25 | 耗时 29 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:23:25 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:23:25 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:23:45 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:23:45 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:23:45 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:23:45 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:23:45 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:23:45 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:23:46 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:23:46 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:23:46 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:23:46 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:23:46 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:23:46 | 耗时 29 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:23:46 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:23:46 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:24:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:24:53 | 耗时 31 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:24:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:24:53 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:24:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:24:53 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:24:53 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:24:53 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:24:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:24:53 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:24:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:24:53 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:24:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:24:53 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:26:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:26:41 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:26:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:26:41 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:26:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:26:41 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:26:42 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:26:42 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:26:42 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:26:42 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:26:42 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:26:42 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:26:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:26:42 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:26:42 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:26:42 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:26:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:26:42 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:26:42 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:26:42 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:27:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:27:12 | 耗时 31 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:27:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:27:12 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:27:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:27:12 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:27:13 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:27:13 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:27:13 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:27:13 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:27:13 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:27:13 | 耗时 30 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:27:13 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:27:13 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:34:41 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880259770 paused.
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880259770 shutting down.
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880259770 paused.
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608880259770 shutdown complete.
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 15:34:42 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 15:34:49 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 15:34:49 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 8816 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 15:34:49 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 15:34:50 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 15:34:50 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 15:34:50 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 15:34:50 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$33b0a8df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$35a239b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:34:51 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 15:34:51 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 15:34:51 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 15:34:51 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 15:34:52 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 15:34:52 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2742 ms
2020-12-25 15:34:52 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 15:34:52 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 15:34:52 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 15:34:52 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 15:34:52 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 15:34:53 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 15:34:53 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 15:34:53 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 15:34:53 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 15:34:53 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 15:34:53 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 15:34:54 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 15:34:54 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 15:34:54 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 15:34:54 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 15:34:54 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 15:34:54 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608881694765'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 15:34:54 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 15:34:54 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 15:34:54 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@62f305bc
2020-12-25 15:34:54 febs-shiro INFO  main p6spy 2020-12-25 15:34:54 | 耗时 29 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 15:34:58 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 15:34:58 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 15:34:58 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 15:34:58 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 15:34:58 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 15:34:58 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 15:34:59 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 15:34:59 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 15:34:59 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 15:34:59 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 10.98 seconds (JVM running for 12.573)
2020-12-25 15:35:00 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 15:35:00 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 15:35:00 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608880259770"'s failed in-progress jobs.
2020-12-25 15:35:00 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 15:35:00 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 15:35:00 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 15:35:00 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 15:35:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 15:35:01 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608881694765 started.
2020-12-25 15:35:01 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 15:35:01 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 15:35:01 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 4 ms
2020-12-25 15:35:01 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 15:35:02 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 15:35:06 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 15:35:07 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:35:07 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:35:07 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:35:07 | 耗时 28 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:35:07 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:35:07 | 耗时 59 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:35:07.127+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 15:35:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:35:07 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:35:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:35:07 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:35:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:35:07 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:35:07 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:35:07 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:35:08 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:35:08 | 耗时 28 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:35:08 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:35:08 | 耗时 74 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:35:08 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 15:35:08 | 耗时 99 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:35:08.019+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:35:08 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:35:08 | 耗时 35 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:35:08 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:35:08 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:35:08 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:35:08 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:35:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:35:08 | 耗时 138 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:35:08 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:35:08 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:35:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:35:08 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:35:25 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:35:25 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:35:26 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:35:26 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:35:26 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:35:26 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:35:26 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:35:26 | 耗时 34 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:35:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:35:26 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:35:26 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:35:26 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:35:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:35:26 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:37:46 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:37:46 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:37:46 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:37:46 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:37:46 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:37:46 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:37:46 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:37:46 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:37:46 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:37:46 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:37:46 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:37:46 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:37:46 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:37:46 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:38:31 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:38:31 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:38:31 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:38:31 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:38:31 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:38:31 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:38:31 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:38:31 | 耗时 41 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:38:31 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:38:31 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:38:31 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:38:31 | 耗时 31 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:38:31 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:38:31 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:39:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:39:01 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:39:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:39:01 | 耗时 32 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:39:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:39:01 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:39:01 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:39:01 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:39:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:39:01 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:39:01 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:39:01 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:39:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:39:01 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:39:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:39:06 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:39:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:39:06 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:39:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:39:06 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:39:07 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:39:07 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:39:07 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:39:07 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:39:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:39:07 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:39:07 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:39:07 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:40:35 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:40:35 | 耗时 32 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:40:35 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:40:35 | 耗时 31 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:40:35 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:40:35 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:40:36 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:40:36 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:40:36 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:40:36 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:40:36 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:40:36 | 耗时 31 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:40:36 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:40:36 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:40:36 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:40:36 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:40:36 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:40:36 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:40:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:40:52 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:40:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:40:52 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:40:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:40:52 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:40:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:40:53 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:40:53 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:40:53 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:40:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:40:53 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:40:53 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:40:53 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:41:22 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:41:22 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:41:22 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:41:22 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:41:22 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:41:22 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:41:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:41:22 | 耗时 33 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:41:22 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:41:22 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:41:22 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:41:22 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:41:22 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:41:22 | 耗时 31 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:42:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608881694765 paused.
2020-12-25 15:42:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 15:42:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 15:42:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 15:42:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608881694765 shutting down.
2020-12-25 15:42:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608881694765 paused.
2020-12-25 15:42:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608881694765 shutdown complete.
2020-12-25 15:42:08 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 15:42:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 15:42:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 15:42:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 15:42:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 15:42:08 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 15:42:15 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 15:42:15 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 5928 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 15:42:15 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 15:42:16 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 15:42:16 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 15:42:16 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 15:42:16 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6b754ec7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$6d66df9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 15:42:17 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 15:42:17 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 15:42:17 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 15:42:17 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 15:42:18 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 15:42:18 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2876 ms
2020-12-25 15:42:18 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 15:42:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 15:42:18 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 15:42:18 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 15:42:18 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 15:42:19 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 15:42:19 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 15:42:19 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 15:42:19 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 15:42:19 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 15:42:19 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 15:42:20 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 15:42:20 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 15:42:20 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 15:42:20 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 15:42:20 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 15:42:20 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608882140795'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 15:42:20 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 15:42:20 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 15:42:20 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@472dbaf5
2020-12-25 15:42:20 febs-shiro INFO  main p6spy 2020-12-25 15:42:20 | 耗时 29 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 15:42:24 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 15:42:24 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 15:42:24 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 15:42:24 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 15:42:24 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 15:42:24 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 15:42:25 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 15:42:25 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 15:42:25 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 15:42:25 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 15:42:25 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 4 ms
2020-12-25 15:42:25 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 15:42:25 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:42:25 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:42:25 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:42:25 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:42:25 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:42:25 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:42:25 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 15:42:25 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 11.344 seconds (JVM running for 13.004)
2020-12-25 15:42:26 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:26 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:42:26 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:42:26 | 耗时 31 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:42:26 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:42:26 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:42:26 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:42:26 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:42:26 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 15:42:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 15:42:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 15:42:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 15:42:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 15:42:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 15:42:27 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 15:42:27 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608881694765"'s failed in-progress jobs.
2020-12-25 15:42:27 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608882140795 started.
2020-12-25 15:42:27 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 15:42:33 febs-shiro INFO  http-nio-8080-exec-10 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 15:42:33 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:42:33 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:42:33 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:42:33 | 耗时 29 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:42:34 | 耗时 58 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T15:42:33.968+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:34 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:34 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:34 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:42:34 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:42:34 | 耗时 31 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:42:34 | 耗时 29 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:42:34 | 耗时 28 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 15:42:34 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 15:42:34 | 耗时 51 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T15:42:34.629+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:42:34 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 15:42:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:42:34 | 耗时 30 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 15:42:35 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:42:35 | 耗时 35 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:42:35 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:42:35 | 耗时 34 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:42:35 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:42:35 | 耗时 32 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:42:52 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:52 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:42:52 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:52 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:42:52 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:52 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:42:53 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:42:53 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:42:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:53 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:42:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:42:53 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:42:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:42:53 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:43:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:43:34 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:43:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:43:34 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:43:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:43:34 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:43:34 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:43:34 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:43:34 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:43:34 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:43:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:43:34 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:43:34 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:43:34 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:45:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:45:04 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:45:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:45:04 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:45:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:45:04 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:45:05 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:45:05 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:45:05 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:45:05 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:45:05 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:45:05 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:45:05 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:45:05 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:45:05 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:45:05 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:45:05 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:45:05 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:45:05 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:45:05 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:45:22 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:22 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:45:22 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:22 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:45:22 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:22 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:45:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:45:22 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:45:22 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:22 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:45:22 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:45:22 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:45:22 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:22 | 耗时 30 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:45:27 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:45:27 | 耗时 31 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:45:27 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:45:27 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:45:27 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:45:27 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:45:27 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:45:27 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:45:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:27 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:45:27 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:45:27 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:45:27 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:45:27 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:45:42 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:45:42 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:45:42 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:45:42 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:45:42 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:45:42 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:45:42 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:45:42 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:45:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:45:42 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:45:42 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:45:42 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:45:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:45:42 | 耗时 34 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:45:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:50 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:45:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:50 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:45:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:50 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:45:51 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:45:51 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:45:51 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:51 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:45:51 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:45:51 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:45:51 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:45:51 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:49:54 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:49:54 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:49:54 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:49:54 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:49:54 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:49:54 | 耗时 80 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:49:54 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:49:54 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:49:54 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:49:54 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:49:54 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:49:54 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:49:54 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:49:54 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:50:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:50:03 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:50:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:50:03 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:50:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:50:03 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:50:04 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:50:04 | 耗时 35 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:50:04 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:50:04 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:50:04 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:50:04 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:50:04 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:50:04 | 耗时 30 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:50:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:50:32 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:50:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:50:32 | 耗时 31 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:50:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:50:32 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:50:33 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:50:33 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:50:33 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:50:33 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:50:33 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:50:33 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:50:33 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:50:33 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:51:28 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:51:28 | 耗时 30 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:51:28 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:51:28 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:51:28 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:51:28 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:51:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:51:28 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:51:28 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:51:28 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:51:28 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:51:28 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:51:28 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:51:28 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:51:42 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:51:42 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:51:42 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:51:42 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:51:42 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:51:42 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:51:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:51:42 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:51:43 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:51:43 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:51:43 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:51:43 | 耗时 24 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:51:43 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 15:51:43 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:51:57 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:51:57 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:51:57 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:51:57 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:51:57 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:51:57 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:51:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:51:58 | 耗时 35 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:51:58 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:51:58 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:51:58 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:51:58 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:51:58 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:51:58 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:54:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:54:03 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:54:04 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:54:04 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:54:04 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:54:04 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:54:04 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:54:04 | 耗时 31 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:54:04 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 15:54:04 | 耗时 29 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:54:04 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:54:04 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:54:04 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:54:04 | 耗时 26 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:54:17 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:54:17 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:54:17 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:54:17 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:54:17 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:54:17 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:54:17 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:54:17 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:54:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:54:17 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:54:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:54:17 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:54:17 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:54:17 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:55:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:55:27 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:55:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:55:27 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:55:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 15:55:27 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:55:28 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 15:55:28 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:55:28 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 15:55:28 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:55:28 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:55:28 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:55:28 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:55:28 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:56:49 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:56:49 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:56:49 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:56:49 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:56:49 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 15:56:49 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:56:49 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 15:56:49 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:56:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:56:49 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:56:49 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:56:49 | 耗时 25 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 15:56:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:56:49 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:58:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:58:25 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 15:58:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:58:25 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 15:58:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:58:25 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 15:58:25 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 15:58:25 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 15:58:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:58:25 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 15:58:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 15:58:25 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 15:58:25 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 15:58:25 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 16:02:02 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 16:02:02 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 16:02:02 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 16:02:02 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 16:02:02 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 16:02:02 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 16:02:02 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 16:02:02 | 耗时 38 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 16:02:02 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 16:02:02 | 耗时 35 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 16:02:02 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 16:02:02 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 16:02:02 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 16:02:02 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 16:02:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 16:02:28 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 16:02:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 16:02:28 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 16:02:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 16:02:28 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 16:02:28 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 16:02:28 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 16:02:28 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 16:02:28 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 16:02:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 16:02:28 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 16:02:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 16:02:28 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 16:06:13 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:06:13 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 16:06:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 16:06:13 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 16:06:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 16:06:13 | 耗时 30 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 0,10;
2020-12-25 16:08:56 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 16:08:56 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 16:08:56 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 16:08:56 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 16:08:56 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 16:08:56 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 16:08:57 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 16:08:57 | 耗时 32 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 16:08:57 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 16:08:57 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 16:08:57 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 16:08:57 | 耗时 26 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 16:08:57 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 16:08:57 | 耗时 27 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 16:09:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:09:24 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 16:09:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:09:24 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 16:09:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:09:24 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 16:09:24 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 16:09:24 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 16:09:24 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 16:09:24 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 16:09:24 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 16:09:24 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 16:09:24 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 16:09:24 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 16:11:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:11:41 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 16:11:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:11:41 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 16:11:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:11:41 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 16:11:41 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 16:11:41 | 耗时 26 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 16:11:41 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 16:11:41 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 16:11:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 16:11:41 | 耗时 29 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 16:11:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:11:42 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 16:11:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 16:11:42 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 16:11:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 16:11:42 | 耗时 25 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 16:13:58 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 16:13:58 | 耗时 25 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 16:13:58 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 16:13:58 | 耗时 25 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 16:13:58 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 16:13:58 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 16:13:58 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 16:13:58 | 耗时 27 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 16:13:58 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 16:13:58 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 16:13:58 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 16:13:58 | 耗时 24 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 16:13:58 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 16:13:58 | 耗时 27 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 16:42:21 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2020-12-25 16:42:21 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:12:28 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:12:28 | 耗时 125 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:12:28 | 耗时 33 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:12:28 | 耗时 34 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 17:12:28 | 耗时 34 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 17:12:28 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:12:28 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:12:28 | 耗时 40 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:12:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:12:28 | 耗时 36 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:17:05 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 17:17:05 | 耗时 50 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:17:05 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 17:17:05 | 耗时 33 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:17:05 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 17:17:05 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:17:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:17:06 | 耗时 38 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:17:06 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 17:17:06 | 耗时 31 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:17:06 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:17:06 | 耗时 31 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:17:06 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:17:06 | 耗时 34 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:17:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:17:56 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:17:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:17:56 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:17:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:17:56 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:17:57 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:17:57 | 耗时 34 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:17:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:17:57 | 耗时 31 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:17:57 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:17:57 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:17:57 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:17:57 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:19:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:19:13 | 耗时 36 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:19:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:19:13 | 耗时 36 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:19:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:19:13 | 耗时 47 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:19:13 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:19:13 | 耗时 28 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:19:13 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:19:13 | 耗时 31 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:19:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:19:13 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:19:13 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:19:13 | 耗时 35 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:24:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608882140795 paused.
2020-12-25 17:24:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 17:24:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 17:24:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 17:24:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608882140795 shutting down.
2020-12-25 17:24:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608882140795 paused.
2020-12-25 17:24:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608882140795 shutdown complete.
2020-12-25 17:24:28 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 17:24:28 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 17:24:28 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 17:24:28 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 17:24:28 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 17:24:28 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 17:46:21 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 17:46:21 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 23540 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 17:46:21 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 17:46:22 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 17:46:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 17:46:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 17:46:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2020-12-25 17:46:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$228b986b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$247d2943] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:46:24 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 17:46:24 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 17:46:24 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 17:46:24 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 17:46:24 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 17:46:24 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 3312 ms
2020-12-25 17:46:25 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 17:46:25 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 17:46:25 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 17:46:25 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 17:46:25 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 17:46:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 17:46:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 17:46:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 17:46:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 17:46:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 17:46:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 17:46:27 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 17:46:27 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 17:46:27 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 17:46:28 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 17:46:28 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 17:46:28 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608889587948'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 17:46:28 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 17:46:28 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 17:46:28 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@67f0bf7e
2020-12-25 17:46:28 febs-shiro INFO  main p6spy 2020-12-25 17:46:28 | 耗时 31 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 17:46:32 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 17:46:32 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 17:46:32 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 17:46:32 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 17:46:32 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 17:46:32 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 17:46:33 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 17:46:33 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 17:46:33 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 17:46:33 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 12.66 seconds (JVM running for 14.37)
2020-12-25 17:46:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 17:46:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 17:46:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 17:46:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 17:46:34 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 17:46:34 febs-shiro INFO  http-nio-8080-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 17:46:34 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 17:46:34 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 17:46:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 17:46:34 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 17:46:34 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:46:34 | 耗时 33 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:46:34 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:46:34 | 耗时 32 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:46:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 17:46:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608882140795"'s failed in-progress jobs.
2020-12-25 17:46:34 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:46:34 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:46:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889587948 started.
2020-12-25 17:46:35 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 17:46:40 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 17:46:40 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 17:46:40 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:46:40 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 17:46:40 | 耗时 30 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 17:46:41 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 17:46:41 | 耗时 61 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T17:46:40.994+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 17:46:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:46:41 | 耗时 29 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:46:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:46:41 | 耗时 30 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:46:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:46:41 | 耗时 32 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:46:41 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:46:41 | 耗时 64 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:46:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:46:41 | 耗时 31 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 17:46:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:46:41 | 耗时 29 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 17:46:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:46:41 | 耗时 35 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 17:46:42 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 17:46:42 | 耗时 61 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T17:46:41.915+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 17:46:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:46:42 | 耗时 35 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 17:46:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:46:42 | 耗时 31 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 17:46:43 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:46:43 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:46:43 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:46:43 | 耗时 34 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:46:43 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:46:43 | 耗时 29 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:46:43 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:46:43 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:46:43 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:46:43 | 耗时 52 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:47:06 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889587948 paused.
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889587948 shutting down.
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889587948 paused.
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889587948 shutdown complete.
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 17:47:07 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 17:47:14 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 17:47:14 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 20972 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 17:47:14 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 17:47:15 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 17:47:15 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 17:47:15 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 17:47:15 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$34804b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2261123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:16 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:17 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 17:47:17 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 17:47:17 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 17:47:17 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 17:47:17 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 17:47:17 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2777 ms
2020-12-25 17:47:17 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 17:47:17 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 17:47:17 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 17:47:18 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 17:47:18 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 17:47:18 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 17:47:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 17:47:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 17:47:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 17:47:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 17:47:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 17:47:20 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 17:47:20 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 17:47:20 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 17:47:20 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 17:47:20 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 17:47:20 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608889640149'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 17:47:20 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 17:47:20 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 17:47:20 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7fce1069
2020-12-25 17:47:20 febs-shiro INFO  main p6spy 2020-12-25 17:47:20 | 耗时 41 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 17:47:24 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 17:47:24 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 17:47:24 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 17:47:24 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 17:47:24 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 17:47:24 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 17:47:25 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 17:47:25 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 17:47:25 febs-shiro INFO  http-nio-8080-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 17:47:25 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 17:47:25 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 3 ms
2020-12-25 17:47:25 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 17:47:25 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 17:47:25 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 11.881 seconds (JVM running for 13.579)
2020-12-25 17:47:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:47:25 | 耗时 38 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:47:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:47:25 | 耗时 39 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:47:26 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:47:26 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:47:26 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 17:47:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:47:27 | 耗时 33 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:47:27 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:47:27 | 耗时 35 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:47:27 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:47:27 | 耗时 64 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:47:27 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:47:27 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:47:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 17:47:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 17:47:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 17:47:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 17:47:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 17:47:27 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889640149 started.
2020-12-25 17:47:28 febs-shiro INFO  http-nio-8080-exec-8 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 2 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 17:47:32 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 2 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 17:47:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:47:32 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:47:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:47:32 | 耗时 38 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 17:47:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:47:32 | 耗时 59 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T17:47:32.774+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 17:47:32 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:47:32 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:47:32 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:47:32 | 耗时 29 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:47:32 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:47:32 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:47:33 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:47:33 | 耗时 34 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:47:33 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:47:33 | 耗时 26 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 17:47:33 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:47:33 | 耗时 29 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 17:47:33 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 17:47:33 | 耗时 61 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T17:47:33.444+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 17:47:33 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:47:33 | 耗时 28 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 17:47:33 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:47:33 | 耗时 29 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 17:47:33 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 17:47:33 | 耗时 32 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 17:47:34 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:47:34 | 耗时 28 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:47:34 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 17:47:34 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:47:34 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 17:47:34 | 耗时 28 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page1id, t.page2id, t.page3id, t.page4id, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:47:42 febs-shiro INFO  QuartzScheduler_FEBS_Scheduler-LAPTOP-2ADCHJEL1608889640149_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 17:47:42 febs-shiro INFO  QuartzScheduler_FEBS_Scheduler-LAPTOP-2ADCHJEL1608889640149_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608889587948"'s failed in-progress jobs.
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889640149 paused.
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889640149 shutting down.
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889640149 paused.
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889640149 shutdown complete.
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 17:47:50 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 17:47:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 17:47:51 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 17:47:56 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 17:47:56 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 21604 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 17:47:56 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 17:47:57 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 17:47:57 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 17:47:57 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 17:47:57 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2020-12-25 17:47:57 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:57 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5ecdd1e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:57 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:57 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$60bf62b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 17:47:59 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 17:47:59 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 17:47:59 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 17:47:59 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 17:47:59 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 17:47:59 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 3717 ms
2020-12-25 17:48:00 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 17:48:00 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 17:48:00 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 17:48:01 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 17:48:01 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 17:48:01 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 17:48:01 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 17:48:01 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 17:48:01 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 17:48:01 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 17:48:01 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 17:48:04 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 17:48:04 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 17:48:04 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 17:48:04 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 17:48:04 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 17:48:04 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608889684053'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 17:48:04 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 17:48:04 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 17:48:04 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6c1a6db1
2020-12-25 17:48:04 febs-shiro INFO  main p6spy 2020-12-25 17:48:04 | 耗时 188 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 17:48:10 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 17:48:10 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 17:48:10 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 17:48:10 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 17:48:10 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 17:48:10 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 17:48:11 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 17:48:11 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 17:48:11 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 17:48:11 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 16.018 seconds (JVM running for 17.821)
2020-12-25 17:48:12 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 17:48:12 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 17:48:12 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 17:48:12 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 17:48:12 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://192.168.3.63:8080/login
2020-12-25 17:48:12 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 17:48:12 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 17:48:12 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608889640149"'s failed in-progress jobs.
2020-12-25 17:48:12 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 17:48:12 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 17:48:12 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 17:48:12 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 17:48:13 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608889684053 started.
2020-12-25 17:48:13 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_get_captcha192.168.3.63]，描述为 [获取验证码] 的接口
2020-12-25 17:48:17 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.3.63 第 1 次访问key为 [limit_login192.168.3.63]，描述为 [登录接口] 的接口
2020-12-25 17:48:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:48:17 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:48:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:48:17 | 耗时 42 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 17:48:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:48:17 | 耗时 113 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('MrBird', '2020-12-25T17:48:17.836+0800', '内网IP|0|0|内网IP|内网IP', '192.168.3.63', 'Windows 10', 'Firefox 84');
2020-12-25 17:48:18 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:48:18 | 耗时 41 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:48:18 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:48:18 | 耗时 28 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:48:18 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:48:18 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:48:18 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 17:48:18 | 耗时 51 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:48:18 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:48:18 | 耗时 30 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 17:48:18 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:48:18 | 耗时 96 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 17:48:19 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:48:19 | 耗时 65 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 17:48:19 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 17:48:19 | 耗时 96 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T17:48:18.985+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 17:48:19 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:48:19 | 耗时 33 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 17:48:19 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:48:19 | 耗时 60 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 17:48:19 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:48:19 | 耗时 41 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:48:19 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:48:19 | 耗时 43 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:48:19 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:48:19 | 耗时 34 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:51:39 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:51:39 | 耗时 38 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:51:39 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:51:39 | 耗时 27 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:51:39 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:51:39 | 耗时 26 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:51:40 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:51:40 | 耗时 43 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:51:40 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:51:40 | 耗时 67 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:51:40 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:51:40 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:51:40 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 17:51:40 | 耗时 30 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:51:40 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:51:40 | 耗时 45 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:51:40 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:51:40 | 耗时 29 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:51:40 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 17:51:40 | 耗时 30 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:52:18 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:52:18 | 耗时 28 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:52:18 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:52:18 | 耗时 26 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:52:18 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:52:18 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:52:19 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 17:52:19 | 耗时 34 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:52:19 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:52:19 | 耗时 36 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:52:19 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:52:19 | 耗时 32 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:52:19 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:52:19 | 耗时 35 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:53:11 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:53:11 | 耗时 60 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:53:11 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:53:11 | 耗时 45 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:53:11 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 17:53:11 | 耗时 137 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:53:11 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 17:53:11 | 耗时 204 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:53:11 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 17:53:11 | 耗时 37 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:53:11 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 17:53:11 | 耗时 44 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:53:12 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 17:53:12 | 耗时 189 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:53:12 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 17:53:12 | 耗时 72 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:53:12 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:53:12 | 耗时 71 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:53:12 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:53:12 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 17:54:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:54:03 | 耗时 67 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 17:54:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:54:03 | 耗时 86 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 17:54:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 17:54:03 | 耗时 99 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 17:54:03 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 17:54:03 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 17:54:04 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 17:54:04 | 耗时 45 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 17:54:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 17:54:04 | 耗时 45 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 17:54:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 17:54:04 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 18:34:08 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 18:34:08 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 5716 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 18:34:08 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 18:34:09 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 18:34:10 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 18:34:10 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 18:34:10 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 39 ms. Found 0 Redis repository interfaces.
2020-12-25 18:34:11 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:11 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c0db21b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:11 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:11 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:11 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:11 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:11 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c2ccb28b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:11 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:12 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:12 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:12 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:12 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:34:12 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 18:34:12 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 18:34:12 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 18:34:12 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 18:34:12 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 18:34:12 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4585 ms
2020-12-25 18:34:13 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 18:34:13 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 18:34:13 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 18:34:14 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 18:34:14 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 18:34:15 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 18:34:15 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 18:34:15 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 18:34:15 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 18:34:15 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 18:34:15 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 18:34:18 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 18:34:18 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 18:34:18 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 18:34:18 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 18:34:18 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 18:34:18 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608892458166'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 18:34:18 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 18:34:18 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 18:34:18 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2dfd157b
2020-12-25 18:34:18 febs-shiro INFO  main p6spy 2020-12-25 18:34:18 | 耗时 68 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 18:34:27 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 18:34:28 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 18:34:28 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 18:34:28 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 18:34:28 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 18:34:28 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 18:34:29 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 18:34:29 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 18:34:30 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 18:34:30 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 22.74 seconds (JVM running for 25.805)
2020-12-25 18:34:31 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 18:34:31 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 18:34:31 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608889684053"'s failed in-progress jobs.
2020-12-25 18:34:31 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608892458166 started.
2020-12-25 18:34:31 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 18:34:31 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 18:34:31 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 18:34:31 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 18:34:31 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 18:34:34 febs-shiro INFO  RMI TCP Connection(5)-172.20.10.2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 18:34:34 febs-shiro INFO  RMI TCP Connection(5)-172.20.10.2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 18:34:34 febs-shiro INFO  RMI TCP Connection(5)-172.20.10.2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 5 ms
2020-12-25 18:34:34 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 18:34:36 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 18:40:56 febs-shiro INFO  http-nio-8080-exec-10 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 18:40:56 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 18:41:01 febs-shiro INFO  http-nio-8080-exec-5 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 2 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 18:41:02 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 18:41:02 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:41:02 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 2 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 18:43:50 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608892458166 paused.
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608892458166 shutting down.
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608892458166 paused.
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608892458166 shutdown complete.
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 18:43:51 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 18:44:02 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 18:44:02 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 10616 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 18:44:02 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 18:44:04 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 18:44:04 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 18:44:04 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 18:44:04 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 46 ms. Found 0 Redis repository interfaces.
2020-12-25 18:44:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a39cc739] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a58e5811] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:07 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:07 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:07 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 18:44:07 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 18:44:07 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 18:44:07 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 18:44:07 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 18:44:07 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 18:44:07 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5294 ms
2020-12-25 18:44:08 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 18:44:08 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 18:44:08 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 18:44:09 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 18:44:09 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 18:44:10 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 18:44:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 18:44:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 18:44:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 18:44:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 18:44:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 18:44:12 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 18:44:12 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 18:44:12 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 18:44:12 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 18:44:12 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 18:44:12 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608893052663'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 18:44:12 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 18:44:12 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 18:44:12 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6f95654c
2020-12-25 18:44:13 febs-shiro INFO  main p6spy 2020-12-25 18:44:13 | 耗时 69 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 18:44:20 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 18:44:20 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 18:44:20 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 18:44:20 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 18:44:20 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 18:44:21 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 18:44:21 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 18:44:22 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 18:44:22 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 18:44:22 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 21.101 seconds (JVM running for 23.788)
2020-12-25 18:44:23 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 18:44:24 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 18:44:24 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608892458166"'s failed in-progress jobs.
2020-12-25 18:44:24 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 18:44:24 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 18:44:24 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 18:44:24 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 18:44:24 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 18:44:24 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608893052663 started.
2020-12-25 18:44:25 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 18:44:25 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 18:44:25 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 6 ms
2020-12-25 18:44:25 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 18:44:28 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 18:44:39 febs-shiro INFO  http-nio-8080-exec-8 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 18:44:39 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 18:44:39 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mybird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:44:39 febs-shiro INFO  http-nio-8080-exec-4 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 2 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 18:44:41 febs-shiro INFO  http-nio-8080-exec-7 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 3 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 18:44:49 febs-shiro INFO  http-nio-8080-exec-10 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 2 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 18:44:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 18:44:49 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:44:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 18:44:49 | 耗时 65 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 18:44:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 18:44:49 | 耗时 160 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T18:44:49.560+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 18:44:49 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 18:44:49 | 耗时 72 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:44:49 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 18:44:49 | 耗时 63 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:44:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 18:44:50 | 耗时 84 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:44:51 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:44:51 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 18:44:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 18:44:52 | 耗时 61 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 18:44:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 18:44:52 | 耗时 67 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 18:44:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 18:44:52 | 耗时 59 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 18:44:52 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 18:44:52 | 耗时 134 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T18:44:52.095+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 18:44:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 18:44:52 | 耗时 53 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 18:44:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 18:44:52 | 耗时 62 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 18:44:54 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 18:44:54 | 耗时 69 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:44:54 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 18:44:54 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:44:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:44:55 | 耗时 80 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 18:44:55 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 18:44:55 | 耗时 70 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 18:44:55 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 18:44:55 | 耗时 73 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 18:49:37 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 18:49:52 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 18:49:52 | 耗时 61 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:49:52 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 18:49:52 | 耗时 66 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:49:52 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 18:49:52 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:49:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 18:49:53 | 耗时 59 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 18:49:53 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 18:49:53 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 18:49:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:49:53 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 18:49:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:49:53 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 18:50:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:50:08 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:50:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:50:08 | 耗时 59 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:50:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:50:08 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:50:09 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 18:50:09 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 18:50:09 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 18:50:09 | 耗时 89 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 18:50:09 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 18:50:09 | 耗时 72 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 18:50:09 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 18:50:09 | 耗时 81 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 18:57:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 18:57:58 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:57:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 18:57:58 | 耗时 50 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:57:59 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 18:57:59 | 耗时 73 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:58:00 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:58:00 | 耗时 68 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 18:58:00 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:58:00 | 耗时 68 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 18:58:00 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 18:58:00 | 耗时 64 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 18:58:00 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:58:00 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 18:58:22 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 18:58:22 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:58:23 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 18:58:23 | 耗时 69 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:58:23 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 18:58:23 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:58:23 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 18:58:23 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 18:58:23 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 18:58:23 | 耗时 70 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 18:58:23 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:58:23 | 耗时 69 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 18:58:24 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:58:24 | 耗时 69 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 18:58:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 18:58:55 | 耗时 88 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:58:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 18:58:55 | 耗时 121 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:58:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 18:58:55 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:58:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 18:58:55 | 耗时 74 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 18:58:55 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 18:58:55 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 18:58:55 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 18:58:55 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 18:58:55 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 18:58:55 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 18:59:10 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:59:10 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:59:10 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:59:10 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:59:10 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:59:10 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:59:11 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 18:59:11 | 耗时 54 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 18:59:11 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 18:59:11 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 18:59:11 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:59:11 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 18:59:11 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 18:59:11 | 耗时 52 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 18:59:54 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:59:54 | 耗时 66 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 18:59:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:59:55 | 耗时 65 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 18:59:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 18:59:55 | 耗时 81 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 18:59:55 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:59:55 | 耗时 68 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 18:59:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 18:59:55 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 18:59:55 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 18:59:55 | 耗时 60 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 18:59:55 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 18:59:55 | 耗时 69 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 19:34:46 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608893052663 paused.
2020-12-25 19:34:46 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 19:34:46 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 19:34:46 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 19:34:46 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608893052663 shutting down.
2020-12-25 19:34:46 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608893052663 paused.
2020-12-25 19:34:46 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608893052663 shutdown complete.
2020-12-25 19:34:47 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 19:34:47 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 19:34:47 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 19:34:47 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 19:34:47 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 19:34:47 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 19:34:58 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 19:34:58 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 7772 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 19:34:58 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 19:34:59 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 19:35:00 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 19:35:00 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 19:35:00 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2020-12-25 19:35:01 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:01 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7b115b10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:01 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:01 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:01 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:01 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:01 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$7d02ebe8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:01 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:02 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:02 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:02 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:02 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:35:02 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 19:35:02 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 19:35:02 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 19:35:02 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 19:35:02 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 19:35:02 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4276 ms
2020-12-25 19:35:03 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 19:35:03 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 19:35:03 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 19:35:04 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 19:35:04 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 19:35:05 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 19:35:05 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 19:35:05 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 19:35:05 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 19:35:05 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 19:35:05 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 19:35:05 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 19:35:05 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 19:35:05 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 19:35:05 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 19:35:06 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 19:35:06 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 19:35:06 febs-shiro INFO  main org.apache.catalina.core.StandardService Stopping service [Tomcat]
2020-12-25 19:35:06 febs-shiro INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-25 19:38:39 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 19:38:39 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 4444 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 19:38:39 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 19:38:40 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 19:38:41 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 19:38:41 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 19:38:41 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 38 ms. Found 0 Redis repository interfaces.
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7b115b10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$7d02ebe8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:42 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 19:38:43 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 19:38:43 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 19:38:43 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 19:38:43 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 19:38:43 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 19:38:43 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4333 ms
2020-12-25 19:38:43 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 19:38:44 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 19:38:44 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 19:38:45 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 19:38:45 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 19:38:45 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 19:38:45 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 19:38:45 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 19:38:45 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 19:38:45 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 19:38:45 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 19:38:48 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 19:38:48 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 19:38:48 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 19:38:48 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 19:38:48 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 19:38:48 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608896328353'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 19:38:48 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 19:38:48 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 19:38:48 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7535307c
2020-12-25 19:38:48 febs-shiro INFO  main p6spy 2020-12-25 19:38:48 | 耗时 66 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 19:38:57 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 19:38:57 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 19:38:57 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 19:38:57 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 19:38:57 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 19:38:58 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 19:38:58 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 19:38:58 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 19:38:59 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 19:38:59 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 21.159 seconds (JVM running for 23.832)
2020-12-25 19:39:00 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 19:39:01 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 19:39:01 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608893052663"'s failed in-progress jobs.
2020-12-25 19:39:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 19:39:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 19:39:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 19:39:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 19:39:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 19:39:01 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608896328353 started.
2020-12-25 19:39:02 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 19:39:02 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 19:39:02 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 6 ms
2020-12-25 19:39:02 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 19:39:04 febs-shiro INFO  http-nio-8080-exec-8 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 19:39:08 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 19:39:08 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 19:39:08 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 19:39:08 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 19:39:08 | 耗时 70 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 19:39:09 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 19:39:09 | 耗时 146 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T19:39:08.990+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 19:39:09 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:39:09 | 耗时 66 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 19:39:09 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:39:09 | 耗时 63 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 19:39:09 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:39:09 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 19:39:10 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 19:39:10 | 耗时 74 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 19:39:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 19:39:10 | 耗时 62 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 19:39:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 19:39:10 | 耗时 57 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 19:39:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 19:39:10 | 耗时 56 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 19:39:10 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 19:39:10 | 耗时 110 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T19:39:10.602+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 19:39:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 19:39:10 | 耗时 56 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 19:39:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 19:39:10 | 耗时 64 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 19:39:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 19:39:13 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 19:39:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 19:39:13 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 19:39:13 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 19:39:13 | 耗时 62 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 19:39:13 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:39:13 | 耗时 51 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 19:39:13 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:39:13 | 耗时 69 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 19:58:44 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:58:44 | 耗时 69 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 19:58:44 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:58:44 | 耗时 76 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 19:58:44 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:58:44 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 19:58:45 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 19:58:45 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 19:58:45 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 19:58:45 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 19:58:45 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 19:58:45 | 耗时 72 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 19:58:45 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 19:58:45 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 20:01:11 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608896328353 paused.
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608896328353 shutting down.
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608896328353 paused.
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608896328353 shutdown complete.
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 20:01:12 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 20:01:20 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 20:01:20 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 3160 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 20:01:20 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 20:01:22 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 20:01:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 20:01:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 20:01:22 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 42 ms. Found 0 Redis repository interfaces.
2020-12-25 20:01:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a9764b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$29b0723] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:24 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:01:24 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 20:01:24 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 20:01:24 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 20:01:24 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 20:01:25 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 20:01:25 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4210 ms
2020-12-25 20:01:25 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 20:01:25 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 20:01:25 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 20:01:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 20:01:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 20:01:27 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 20:01:27 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 20:01:27 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 20:01:27 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 20:01:27 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 20:01:27 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 20:01:30 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 20:01:30 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 20:01:30 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 20:01:30 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 20:01:30 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 20:01:30 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608897690236'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 20:01:30 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 20:01:30 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 20:01:30 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@61503d00
2020-12-25 20:01:30 febs-shiro INFO  main p6spy 2020-12-25 20:01:30 | 耗时 66 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 20:01:38 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 20:01:39 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 20:01:39 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 20:01:39 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 20:01:39 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 20:01:39 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 20:01:40 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 20:01:40 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 20:01:40 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 20:01:40 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 20.502 seconds (JVM running for 22.979)
2020-12-25 20:01:41 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 20:01:42 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 20:01:42 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 20:01:42 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 20:01:42 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 20:01:42 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 20:01:42 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 20:01:42 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608896328353"'s failed in-progress jobs.
2020-12-25 20:01:42 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897690236 started.
2020-12-25 20:01:43 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 20:01:43 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 20:01:43 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 3 ms
2020-12-25 20:01:43 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 20:01:44 febs-shiro INFO  http-nio-8080-exec-5 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 20:03:19 febs-shiro INFO  http-nio-8080-exec-7 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 20:03:19 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 20:03:19 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:03:19 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 20:03:19 | 耗时 59 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 20:03:20 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 20:03:20 | 耗时 123 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T20:03:19.974+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 20:03:20 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 20:03:20 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 20:03:20 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 20:03:20 | 耗时 66 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 20:03:20 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 20:03:20 | 耗时 77 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:03:21 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:03:21 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 20:03:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 20:03:21 | 耗时 61 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 20:03:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 20:03:21 | 耗时 69 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 20:03:21 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 20:03:21 | 耗时 132 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T20:03:21.406+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 20:03:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 20:03:21 | 耗时 57 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 20:03:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 20:03:21 | 耗时 60 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 20:03:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 20:03:21 | 耗时 54 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 20:03:23 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 20:03:23 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 20:03:23 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 20:03:23 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 20:03:23 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 20:03:23 | 耗时 75 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 20:05:26 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897690236 paused.
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897690236 shutting down.
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897690236 paused.
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897690236 shutdown complete.
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 20:05:27 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 20:05:35 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 20:05:35 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 16024 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 20:05:35 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 20:05:36 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 20:05:37 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 20:05:37 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 20:05:37 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 39 ms. Found 0 Redis repository interfaces.
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a47abf21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a66c4ff9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:38 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:39 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:05:39 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 20:05:39 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 20:05:39 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 20:05:39 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 20:05:39 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 20:05:39 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4245 ms
2020-12-25 20:05:39 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 20:05:40 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 20:05:40 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 20:05:41 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 20:05:41 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 20:05:42 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 20:05:42 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 20:05:42 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 20:05:42 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 20:05:42 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 20:05:42 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 20:05:44 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 20:05:44 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 20:05:44 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 20:05:44 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 20:05:44 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 20:05:44 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608897944615'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 20:05:44 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 20:05:44 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 20:05:44 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@182fd26b
2020-12-25 20:05:44 febs-shiro INFO  main p6spy 2020-12-25 20:05:44 | 耗时 64 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 20:05:52 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 20:05:52 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 20:05:52 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 20:05:52 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 20:05:52 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 20:05:52 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 20:05:53 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 20:05:53 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 20:05:53 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 20:05:53 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 19.169 seconds (JVM running for 21.729)
2020-12-25 20:05:54 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 20:05:54 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 20:05:54 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 20:05:54 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 20:05:54 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 20:05:54 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 20:05:55 febs-shiro INFO  http-nio-8080-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 20:05:55 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 20:05:55 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 3 ms
2020-12-25 20:05:55 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 20:05:55 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 20:05:55 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608897690236"'s failed in-progress jobs.
2020-12-25 20:05:55 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897944615 started.
2020-12-25 20:05:55 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 20:06:51 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 20:06:51 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 20:06:51 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:06:51 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 20:06:51 | 耗时 54 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 20:06:52 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 20:06:52 | 耗时 131 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T20:06:51.884+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 20:06:52 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:06:52 | 耗时 76 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 20:06:52 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:06:52 | 耗时 66 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 20:06:52 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:06:52 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:06:53 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 20:06:53 | 耗时 80 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 20:06:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:06:53 | 耗时 67 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 20:06:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:06:53 | 耗时 60 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 20:06:53 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 20:06:53 | 耗时 127 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T20:06:53.231+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 20:06:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:06:53 | 耗时 67 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 20:06:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:06:53 | 耗时 122 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 20:06:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:06:53 | 耗时 82 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 20:08:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:08:16 | 耗时 61 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 20:08:16 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 20:08:16 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 20:08:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:08:16 | 耗时 67 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 20:08:18 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 20:08:18 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'undefined' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:08:22 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 20:08:22 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 20:08:22 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 20:08:22 | 耗时 74 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 20:08:22 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 20:08:22 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:08:22 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 20:08:22 | 耗时 66 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 20:08:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:08:22 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 20:08:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 20:08:22 | 耗时 62 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 20:08:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:08:22 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 20:09:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 20:09:03 | 耗时 90 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 20:09:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 20:09:03 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 20:09:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 20:09:03 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:09:03 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 20:09:03 | 耗时 76 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 20:09:04 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 20:09:04 | 耗时 70 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 20:09:04 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:09:04 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 20:09:04 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 20:09:04 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 20:10:06 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897944615 paused.
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897944615 shutting down.
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897944615 paused.
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608897944615 shutdown complete.
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 20:10:07 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 20:10:13 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 20:10:13 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 15424 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 20:10:13 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 20:10:14 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 20:10:14 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 20:10:14 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 20:10:14 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b5de679a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$b7cff872] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:15 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 20:10:16 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 20:10:16 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 20:10:16 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 20:10:16 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 20:10:16 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 20:10:16 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2527 ms
2020-12-25 20:10:16 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 20:10:16 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 20:10:16 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 20:10:17 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 20:10:17 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 20:10:18 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 20:10:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 20:10:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 20:10:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 20:10:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 20:10:18 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 20:10:19 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 20:10:19 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 20:10:19 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 20:10:19 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 20:10:19 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 20:10:19 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608898219754'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 20:10:19 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 20:10:19 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 20:10:19 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@11577ab8
2020-12-25 20:10:20 febs-shiro INFO  main p6spy 2020-12-25 20:10:20 | 耗时 61 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 20:10:26 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 20:10:27 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 20:10:27 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 20:10:27 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 20:10:27 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 20:10:27 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 20:10:27 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 20:10:27 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 20:10:28 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 20:10:28 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 14.915 seconds (JVM running for 16.433)
2020-12-25 20:10:28 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 20:10:28 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 20:10:28 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 20:10:28 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 20:10:28 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 20:10:29 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 20:10:29 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 20:10:29 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 20:10:29 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 4 ms
2020-12-25 20:10:29 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 20:10:29 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 20:10:29 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608897944615"'s failed in-progress jobs.
2020-12-25 20:10:29 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608898219754 started.
2020-12-25 20:10:30 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 20:11:38 febs-shiro INFO  http-nio-8080-exec-4 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 20:11:39 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:11:39 | 耗时 79 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:11:39 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:11:39 | 耗时 54 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 20:11:39 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:11:39 | 耗时 127 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T20:11:39.251+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 20:11:39 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 20:11:39 | 耗时 68 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 20:11:39 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 20:11:39 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 20:11:39 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 20:11:39 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 20:11:40 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 20:11:40 | 耗时 66 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 20:11:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:11:40 | 耗时 67 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 20:11:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:11:40 | 耗时 64 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 20:11:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:11:40 | 耗时 77 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 20:11:40 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 20:11:40 | 耗时 148 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T20:11:40.309+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 20:11:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:11:40 | 耗时 88 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 20:11:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 20:11:40 | 耗时 79 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 20:11:41 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 20:11:41 | 耗时 72 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 20:11:41 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 20:11:41 | 耗时 91 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 20:11:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 20:11:41 | 耗时 65 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 20:11:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 20:11:41 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 20:11:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 20:11:41 | 耗时 65 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 20:11:43 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 20:11:43 | 耗时 132 ms | SQL 语句：
UPDATE t_car SET status = 2 WHERE carid = '3';
2020-12-25 20:11:44 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 20:11:44 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 20:11:44 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 20:11:44 | 耗时 153 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '驳回数据', 206, 'cc.mrbird.febs.system.controller.CarController.bohui()', ' carId: "3"', '172.20.10.2', '2020-12-25T20:11:43.948+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 20:11:44 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 20:11:44 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:10:29 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2020-12-25 21:10:29 febs-shiro INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2020-12-25 21:10:43 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:10:43 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:10:43 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:10:43 | 耗时 59 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:10:43 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:10:43 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:10:44 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:10:44 | 耗时 59 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:10:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:10:44 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:10:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:10:44 | 耗时 61 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:10:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:10:44 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:10:44 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:10:44 | 耗时 51 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:10:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:10:44 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:03 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:11:03 | 耗时 91 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:11:03 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:11:03 | 耗时 93 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:11:03 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:11:03 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:11:04 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:11:04 | 耗时 88 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:11:04 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:11:04 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:04 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:11:04 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:11:04 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:11:04 | 耗时 52 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:07 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:11:07 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:07 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:11:07 | 耗时 62 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:11:08 | 耗时 67 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:11:08 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:11:22 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:11:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:11:22 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:11:23 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:11:23 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:11:23 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:11:23 | 耗时 77 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:11:23 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:11:23 | 耗时 69 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:23 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:11:23 | 耗时 69 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:11:23 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:11:23 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:29 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:11:29 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:11:29 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:11:29 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:11:29 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:11:29 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:11:30 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:11:30 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:11:30 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:11:30 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:11:30 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:11:30 | 耗时 67 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:30 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:11:30 | 耗时 61 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:30 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:11:30 | 耗时 51 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:30 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:11:30 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:32 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:11:32 | 耗时 77 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:32 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:11:32 | 耗时 94 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:32 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:11:32 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:32 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:11:32 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:33 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:11:33 | 耗时 77 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:34 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:11:34 | 耗时 91 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:11:34 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:34 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:11:34 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:11:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:11:42 | 耗时 75 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:11:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:11:42 | 耗时 88 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:11:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:11:42 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:11:43 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:11:43 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:11:43 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:11:43 | 耗时 69 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:11:43 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:11:43 | 耗时 68 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:11:43 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:11:43 | 耗时 73 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:12:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:12:10 | 耗时 53 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:12:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:12:10 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:12:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:12:10 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:12:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:12:11 | 耗时 54 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:12:11 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:12:11 | 耗时 66 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:12:11 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:12:11 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:12:11 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:12:11 | 耗时 61 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:12:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:12:18 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:12:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:12:18 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:17:11 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:17:11 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:17:11 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:17:11 | 耗时 64 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:17:11 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:17:11 | 耗时 73 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:17:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:17:12 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:17:14 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:17:14 | 耗时 53 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:17:14 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:17:14 | 耗时 82 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:17:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:17:27 | 耗时 73 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:17:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:17:27 | 耗时 87 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:17:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:17:27 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:17:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:17:28 | 耗时 88 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:17:28 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:17:28 | 耗时 81 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:17:28 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:17:28 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:17:28 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:17:28 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:17:39 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:17:39 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:17:39 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:17:39 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:17:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:17:49 | 耗时 64 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:17:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:17:49 | 耗时 58 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:19:34 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608898219754 paused.
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608898219754 shutting down.
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608898219754 paused.
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608898219754 shutdown complete.
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 21:19:35 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 21:19:41 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 21:19:41 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 14712 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 21:19:41 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 21:19:42 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 21:19:43 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 21:19:43 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 21:19:43 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$19f66a8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$1be7fb67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:45 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:45 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:45 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:19:45 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 21:19:45 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 21:19:45 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 21:19:45 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 21:19:45 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 21:19:45 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4133 ms
2020-12-25 21:19:45 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 21:19:46 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 21:19:46 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 21:19:47 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 21:19:47 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 21:19:47 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 21:19:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 21:19:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 21:19:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 21:19:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 21:19:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 21:19:50 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 21:19:50 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 21:19:50 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 21:19:50 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 21:19:50 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 21:19:50 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608902390208'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 21:19:50 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 21:19:50 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 21:19:50 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@23e0c200
2020-12-25 21:19:50 febs-shiro INFO  main p6spy 2020-12-25 21:19:50 | 耗时 73 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 21:19:58 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 21:19:58 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:19:58 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:19:58 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:19:58 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:19:58 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 21:19:59 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 21:19:59 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 21:20:00 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 21:20:00 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 19.469 seconds (JVM running for 21.915)
2020-12-25 21:20:01 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 21:20:01 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 21:20:01 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608898219754"'s failed in-progress jobs.
2020-12-25 21:20:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 21:20:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 21:20:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 21:20:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 21:20:01 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 21:20:02 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902390208 started.
2020-12-25 21:20:02 febs-shiro INFO  RMI TCP Connection(3)-172.20.10.2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 21:20:02 febs-shiro INFO  RMI TCP Connection(3)-172.20.10.2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 21:20:02 febs-shiro INFO  RMI TCP Connection(3)-172.20.10.2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 3 ms
2020-12-25 21:20:03 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 21:20:03 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 21:23:43 febs-shiro INFO  http-nio-8080-exec-4 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 21:23:43 febs-shiro INFO  http-nio-8080-exec-5 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 21:23:51 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 2 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 21:23:51 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:23:51 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:23:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:23:52 | 耗时 98 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:23:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:23:52 | 耗时 132 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T21:23:52.120+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 21:23:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:23:52 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:23:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:23:52 | 耗时 66 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:23:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:23:52 | 耗时 73 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:23:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:23:53 | 耗时 80 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:23:53 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 21:23:53 | 耗时 118 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T21:23:53.501+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 21:23:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:23:53 | 耗时 57 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 21:23:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:23:53 | 耗时 54 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:23:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:23:53 | 耗时 54 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:23:54 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:23:54 | 耗时 49 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 21:23:54 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:23:54 | 耗时 55 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 21:23:55 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:23:55 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:23:55 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:23:55 | 耗时 54 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:23:55 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:23:55 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:23:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:23:57 | 耗时 76 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:23:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:23:57 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:24:00 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:24:00 | 耗时 62 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:24:36 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:24:36 | 耗时 82 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:24:36 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:24:36 | 耗时 91 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:24:36 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:24:36 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:24:37 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:24:37 | 耗时 73 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:24:37 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:24:37 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:24:37 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:24:37 | 耗时 66 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:24:37 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:24:37 | 耗时 67 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:24:44 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:24:44 | 耗时 90 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:24:46 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:24:46 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:25:07 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902390208 paused.
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902390208 shutting down.
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902390208 paused.
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902390208 shutdown complete.
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 21:25:08 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 21:25:14 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 21:25:14 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 11632 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 21:25:14 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 21:25:16 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 21:25:16 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 21:25:16 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 21:25:16 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2020-12-25 21:25:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6f70094c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$71619a24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:17 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:18 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:18 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:18 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:18 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:25:18 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 21:25:18 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 21:25:18 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 21:25:18 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 21:25:18 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 21:25:18 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4190 ms
2020-12-25 21:25:19 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 21:25:19 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 21:25:19 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 21:25:20 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 21:25:20 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 21:25:21 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 21:25:21 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 21:25:21 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 21:25:21 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 21:25:21 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 21:25:21 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 21:25:23 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 21:25:23 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 21:25:23 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 21:25:23 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 21:25:23 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 21:25:23 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608902723500'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 21:25:23 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 21:25:23 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 21:25:23 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@19540247
2020-12-25 21:25:23 febs-shiro INFO  main p6spy 2020-12-25 21:25:23 | 耗时 68 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 21:25:31 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 21:25:31 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:25:31 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:25:31 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:25:31 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:25:32 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 21:25:32 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 21:25:32 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 21:25:33 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 21:25:33 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 19.559 seconds (JVM running for 21.986)
2020-12-25 21:25:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 21:25:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 21:25:34 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608902390208"'s failed in-progress jobs.
2020-12-25 21:25:35 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902723500 started.
2020-12-25 21:25:35 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 21:25:35 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 21:25:35 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 21:25:35 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 21:25:35 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 21:25:35 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 21:25:35 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 21:25:35 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 5 ms
2020-12-25 21:25:36 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 21:25:37 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 21:26:04 febs-shiro INFO  http-nio-8080-exec-7 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 21:26:04 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:26:04 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:26:04 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:26:04 | 耗时 56 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:26:04 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:26:04 | 耗时 150 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T21:26:04.487+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 21:26:04 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:26:04 | 耗时 65 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:26:04 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:26:04 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:26:04 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:26:04 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:26:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:26:05 | 耗时 68 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:26:05 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:26:05 | 耗时 52 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 21:26:05 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:26:05 | 耗时 50 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:26:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:26:06 | 耗时 51 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:26:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:26:06 | 耗时 52 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 21:26:06 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 21:26:06 | 耗时 136 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T21:26:05.930+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 21:26:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:26:06 | 耗时 64 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 21:26:07 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:26:07 | 耗时 61 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:26:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:26:07 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:26:07 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:26:07 | 耗时 58 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:26:11 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:26:11 | 耗时 106 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:26:11 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:26:11 | 耗时 98 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 AND car.carno = '1' ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:26:43 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902723500 paused.
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902723500 shutting down.
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902723500 paused.
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902723500 shutdown complete.
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 21:26:44 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 21:26:51 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 21:26:51 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 1768 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 21:26:51 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 21:26:52 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 38 ms. Found 0 Redis repository interfaces.
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$17da3060] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$19cbc138] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:26:55 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 21:26:55 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 21:26:55 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 21:26:55 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 21:26:55 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 21:26:55 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4123 ms
2020-12-25 21:26:55 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 21:26:56 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 21:26:56 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 21:26:57 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 21:26:57 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 21:26:57 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 21:26:57 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 21:26:57 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 21:26:57 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 21:26:57 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 21:26:57 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 21:27:00 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 21:27:00 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 21:27:00 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 21:27:00 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 21:27:00 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 21:27:00 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608902820090'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 21:27:00 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 21:27:00 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 21:27:00 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2c451c4a
2020-12-25 21:27:00 febs-shiro INFO  main p6spy 2020-12-25 21:27:00 | 耗时 66 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 21:27:07 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 21:27:08 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:27:08 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:27:08 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:27:08 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:27:08 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 21:27:08 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 21:27:09 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 21:27:09 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 21:27:09 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 19.123 seconds (JVM running for 21.516)
2020-12-25 21:27:10 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 21:27:11 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 21:27:11 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 21:27:11 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 21:27:11 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 21:27:11 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 21:27:11 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 21:27:11 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608902723500"'s failed in-progress jobs.
2020-12-25 21:27:11 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902820090 started.
2020-12-25 21:27:11 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 21:27:11 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 21:27:11 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 4 ms
2020-12-25 21:27:11 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 21:27:12 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 21:27:20 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 21:27:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:27:20 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:27:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:27:20 | 耗时 71 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:27:21 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:27:21 | 耗时 154 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T21:27:20.824+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 21:27:21 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:27:21 | 耗时 59 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:27:21 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:27:21 | 耗时 85 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:27:21 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:27:21 | 耗时 73 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:27:22 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:27:22 | 耗时 75 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:27:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:27:22 | 耗时 63 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 21:27:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:27:22 | 耗时 64 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:27:22 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 21:27:22 | 耗时 121 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T21:27:22.121+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 21:27:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:27:22 | 耗时 64 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:27:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:27:22 | 耗时 67 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 21:27:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:27:22 | 耗时 59 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 21:27:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:27:24 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:27:24 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:27:24 | 耗时 64 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:27:24 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:27:24 | 耗时 71 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:27:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:27:34 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:27:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:27:34 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 AND t.carno = '1' ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:27:36 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:27:36 | 耗时 64 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:27:36 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:27:36 | 耗时 78 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:27:39 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:27:39 | 耗时 74 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:27:39 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:27:39 | 耗时 65 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 AND t.depname > '11' ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:27:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:27:41 | 耗时 84 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:27:42 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:27:42 | 耗时 79 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:27:46 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:27:46 | 耗时 78 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:27:46 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:27:46 | 耗时 77 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 AND t.carno = '我达瓦、' ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:27:48 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:27:48 | 耗时 53 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:27:48 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:27:48 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:27:50 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:27:50 | 耗时 53 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:27:50 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:27:50 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 AND t.depname > '1' ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:28:26 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902820090 paused.
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902820090 shutting down.
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902820090 paused.
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902820090 shutdown complete.
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 21:28:27 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 21:28:31 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 21:28:31 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 7044 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 21:28:31 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 21:28:32 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 21:28:32 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 21:28:32 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 21:28:32 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$fa50fcdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$fc428db3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:33 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:28:34 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 21:28:34 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 21:28:34 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 21:28:34 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 21:28:34 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 21:28:34 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2531 ms
2020-12-25 21:28:34 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 21:28:34 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 21:28:34 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 21:28:35 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 21:28:35 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 21:28:36 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 21:28:36 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 21:28:36 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 21:28:36 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 21:28:36 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 21:28:36 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 21:28:38 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 21:28:38 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 21:28:38 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 21:28:38 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 21:28:38 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 21:28:38 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608902918105'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 21:28:38 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 21:28:38 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 21:28:38 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7348e75e
2020-12-25 21:28:38 febs-shiro INFO  main p6spy 2020-12-25 21:28:38 | 耗时 94 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 21:28:45 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 21:28:45 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:28:45 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:28:45 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:28:45 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:28:45 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 21:28:46 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 21:28:46 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 21:28:46 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 21:28:46 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 15.156 seconds (JVM running for 16.701)
2020-12-25 21:28:47 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 21:28:47 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 21:28:47 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 21:28:47 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 21:28:47 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 21:28:47 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 21:28:47 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 21:28:47 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 21:28:47 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 21:28:47 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 21:28:48 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902918105 started.
2020-12-25 21:28:48 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 21:29:03 febs-shiro INFO  QuartzScheduler_FEBS_Scheduler-LAPTOP-2ADCHJEL1608902918105_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 21:29:03 febs-shiro INFO  QuartzScheduler_FEBS_Scheduler-LAPTOP-2ADCHJEL1608902918105_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608902820090"'s failed in-progress jobs.
2020-12-25 21:29:33 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 21:29:34 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:29:34 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:29:34 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:29:34 | 耗时 63 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:29:34 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:29:34 | 耗时 114 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T21:29:34.224+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 21:29:34 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:29:34 | 耗时 58 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:29:34 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:29:34 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:29:34 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:29:34 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:29:35 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:29:35 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:29:35 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:29:35 | 耗时 65 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 21:29:35 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:29:35 | 耗时 57 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:29:35 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:29:35 | 耗时 59 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:29:35 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 21:29:35 | 耗时 127 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T21:29:35.246+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 21:29:35 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:29:35 | 耗时 63 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 21:29:35 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:29:35 | 耗时 67 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 21:29:36 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:29:36 | 耗时 63 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:29:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:29:36 | 耗时 68 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:29:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:29:36 | 耗时 92 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:29:38 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:29:38 | 耗时 48 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:29:38 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:29:38 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 AND t.depname = '1' ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:29:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:29:41 | 耗时 78 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:29:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:29:41 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:29:45 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:29:45 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:29:45 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:29:45 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:30:29 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:30:29 | 耗时 60 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:30:29 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:30:29 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:30:29 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:30:29 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:30:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:30:29 | 耗时 62 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:30:29 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:30:29 | 耗时 60 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:30:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:30:29 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:30:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:30:29 | 耗时 70 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:30:37 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:30:37 | 耗时 51 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:30:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:30:38 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:30:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:30:38 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:30:38 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:30:38 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:30:38 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:30:38 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:30:38 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:30:38 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:30:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:30:38 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:30:38 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:30:38 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:30:39 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:30:39 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:30:39 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:30:39 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:30:47 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:30:47 | 耗时 65 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:30:47 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:30:47 | 耗时 54 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:30:47 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:30:47 | 耗时 83 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:30:47 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:30:47 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:30:48 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:30:48 | 耗时 54 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:30:48 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:30:48 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:30:48 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:30:48 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:31:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:31:05 | 耗时 84 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:31:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:31:05 | 耗时 51 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:31:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:31:05 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:31:06 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:31:06 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:31:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:31:06 | 耗时 57 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:31:06 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:31:06 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:31:06 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:31:06 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:31:15 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:31:15 | 耗时 105 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:31:15 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:31:15 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:31:15 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:31:15 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:31:16 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:31:16 | 耗时 55 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:31:16 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:31:16 | 耗时 63 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:31:16 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:31:16 | 耗时 64 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:31:16 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:31:16 | 耗时 70 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:31:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:31:41 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:31:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:31:41 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:31:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:31:41 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:31:42 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:31:42 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:31:42 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:31:42 | 耗时 59 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:31:42 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:31:42 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:31:42 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:31:42 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:31:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:31:48 | 耗时 58 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:31:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:31:48 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:31:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:31:48 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:31:48 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:31:48 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:31:48 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:31:48 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:31:48 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:31:48 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:31:48 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:31:48 | 耗时 78 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:31:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:31:52 | 耗时 73 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:31:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:31:52 | 耗时 81 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:31:53 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:31:53 | 耗时 74 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:31:53 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:31:53 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:31:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:31:53 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:31:53 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:31:53 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:31:53 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:31:53 | 耗时 63 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:32:01 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:32:01 | 耗时 116 ms | SQL 语句：
UPDATE t_car SET status = 2 WHERE carid = '3';
2020-12-25 21:32:01 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:32:01 | 耗时 129 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:32:01 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:32:01 | 耗时 69 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:32:01 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 21:32:01 | 耗时 139 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '驳回数据', 178, 'cc.mrbird.febs.system.controller.CarController.bohui()', ' carId: "3"', '172.20.10.2', '2020-12-25T21:32:01.677+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 21:32:44 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:32:44 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'undefined' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:32:48 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:32:48 | 耗时 55 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 21:32:48 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:32:48 | 耗时 64 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:32:48 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:32:48 | 耗时 58 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:32:48 febs-shiro INFO  Febs-Async-Thread3 p6spy 2020-12-25 21:32:48 | 耗时 108 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T21:32:48.321+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 21:32:48 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:32:48 | 耗时 52 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 21:32:48 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:32:48 | 耗时 52 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 21:34:06 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:34:06 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 21:34:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:34:06 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:34:06 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:34:06 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 21:34:08 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:34:08 | 耗时 56 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:40:50 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:40:50 | 耗时 97 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:40:50 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:40:50 | 耗时 97 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:41:28 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:41:28 | 耗时 137 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, CREATE_TIME) VALUES (0, '修改记录', '/system/user/carupdate', '', '', '0', '2020-12-25T21:41:28.199+0800');
2020-12-25 21:41:28 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:41:28 | 耗时 57 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:41:28 febs-shiro INFO  Febs-Async-Thread4 p6spy 2020-12-25 21:41:28 | 耗时 116 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '新增菜单/按钮', 408, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=181, parentId=0, menuName=修改记录, url=/system/user/carupdate, perms=, icon=, type=0, orderNum=null, createTime=Fri Dec 25 21:41:28 CST 2020, modifyTime=null)"', '172.20.10.2', '2020-12-25T21:41:28.482+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 21:41:33 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:41:33 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:41:33 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:41:33 | 耗时 55 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:41:33 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:41:33 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:41:34 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:41:34 | 耗时 78 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:41:34 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:41:34 | 耗时 92 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:42:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:42:01 | 耗时 135 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('181');
2020-12-25 21:42:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:42:01 | 耗时 59 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('181'));
2020-12-25 21:42:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:42:01 | 耗时 101 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (MENU_ID IN ('181'));
2020-12-25 21:42:02 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:42:02 | 耗时 60 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:42:02 febs-shiro INFO  Febs-Async-Thread5 p6spy 2020-12-25 21:42:02 | 耗时 116 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '删除菜单/按钮', 597, 'cc.mrbird.febs.system.controller.MenuController.deleteMenus()', ' menuIds: "181"', '172.20.10.2', '2020-12-25T21:42:01.935+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 21:43:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:43:40 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:43:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:43:40 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:43:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:43:40 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:43:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:43:41 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:43:41 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:43:41 | 耗时 55 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:43:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:43:41 | 耗时 64 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:43:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:43:41 | 耗时 64 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:44:53 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:44:53 | 耗时 85 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:44:53 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:44:53 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:44:53 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:44:53 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:44:53 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:44:53 | 耗时 60 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:44:53 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:44:53 | 耗时 57 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:45:03 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:45:03 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:45:03 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:45:03 | 耗时 71 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:45:03 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:45:03 | 耗时 91 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:45:03 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:45:03 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:45:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:45:03 | 耗时 65 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:45:29 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:45:29 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:45:29 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:45:29 | 耗时 57 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:45:29 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:45:29 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:45:30 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:45:30 | 耗时 74 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:45:30 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:45:30 | 耗时 57 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:45:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:45:48 | 耗时 111 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 180, MENU_NAME = '修改记录', PERMS = 'user:carupdate', TYPE = '1', MODIFY_TIME = '2020-12-25T21:45:48.502+0800' WHERE MENU_ID = 182;
2020-12-25 21:45:48 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:45:48 | 耗时 57 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:45:48 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 21:45:48 | 耗时 125 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改菜单/按钮', 380, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=182, parentId=180, menuName=修改记录, url=null, perms=user:carupdate, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Fri Dec 25 21:45:48 CST 2020)"', '172.20.10.2', '2020-12-25T21:45:48.755+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 21:46:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:46:05 | 耗时 61 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:46:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:46:05 | 耗时 71 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:46:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:46:05 | 耗时 90 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:46:05 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:46:05 | 耗时 77 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:46:05 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:46:05 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:46:05 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:46:05 | 耗时 73 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:46:06 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:46:06 | 耗时 66 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:46:06 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:46:06 | 耗时 61 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:46:06 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:46:06 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:46:06 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:46:06 | 耗时 68 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:46:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:46:07 | 耗时 96 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:46:07 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:46:07 | 耗时 101 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:46:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:46:07 | 耗时 65 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:46:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:46:11 | 耗时 59 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:46:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:46:11 | 耗时 73 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:46:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:46:11 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:46:11 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:46:11 | 耗时 66 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:46:12 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:46:12 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:46:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:46:12 | 耗时 63 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:46:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:46:12 | 耗时 67 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:46:29 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:46:29 | 耗时 56 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:46:29 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:46:29 | 耗时 75 ms | SQL 语句：
SELECT COUNT(1) FROM t_role r WHERE 1 = 1;
2020-12-25 21:46:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:46:29 | 耗时 74 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:46:29 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:46:29 | 耗时 52 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-12-25 21:46:35 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:46:35 | 耗时 154 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^', MODIFY_TIME = '2020-12-25T21:46:35.791+0800' WHERE ROLE_ID = 1;
2020-12-25 21:46:36 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:46:36 | 耗时 128 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2020-12-25 21:46:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:46:41 | 耗时 60 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:46:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:46:41 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:46:41 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 21:46:41 | 耗时 118 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改角色', 5664, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Fri Dec 25 21:46:35 CST 2020, menuIds=179,180,182,1,3,11,12,13,160,161,4,14,15,16,162,5,17,18,19,163,6,20,21,22,164,2,8,23,10,24,170,136,171,172,127,128,129,131,175,137,138,165,139,166,101,102,103,104,105,106,107,108,173,109,110,174,115,132,133,135,134,126,159,116,117,119,120,121,122,123,118,125,167,168,169,178)"', '172.20.10.2', '2020-12-25T21:46:41.334+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 21:46:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:46:41 | 耗时 95 ms | SQL 语句：
SELECT COUNT(1) FROM t_role r WHERE 1 = 1;
2020-12-25 21:46:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:46:41 | 耗时 61 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-12-25 21:46:46 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902918105 paused.
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902918105 shutting down.
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902918105 paused.
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608902918105 shutdown complete.
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 21:46:47 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 21:46:56 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 21:46:56 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 13824 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 21:46:56 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 21:46:57 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 21:46:57 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 21:46:57 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 21:46:57 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2020-12-25 21:46:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$770fc2e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$790153ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:58 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:46:59 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 21:47:00 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 21:47:00 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 21:47:00 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 21:47:00 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 21:47:00 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4202 ms
2020-12-25 21:47:00 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 21:47:00 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 21:47:00 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 21:47:01 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 21:47:01 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 21:47:02 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 21:47:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 21:47:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 21:47:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 21:47:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 21:47:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 21:47:06 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 21:47:06 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 21:47:06 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 21:47:06 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 21:47:06 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 21:47:06 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608904026369'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 21:47:06 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 21:47:06 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 21:47:06 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@15a2fddd
2020-12-25 21:47:06 febs-shiro INFO  main p6spy 2020-12-25 21:47:06 | 耗时 64 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 21:47:14 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 21:47:14 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:47:14 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:47:14 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:47:14 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:47:15 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 21:47:16 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 21:47:16 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 21:47:16 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 21:47:16 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 21.595 seconds (JVM running for 24.003)
2020-12-25 21:47:17 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 21:47:18 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 21:47:18 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608902918105"'s failed in-progress jobs.
2020-12-25 21:47:18 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 21:47:18 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 21:47:18 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 3 ms
2020-12-25 21:47:18 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 21:47:18 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 21:47:18 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 21:47:18 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 21:47:18 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 21:47:18 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 21:47:18 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904026369 started.
2020-12-25 21:47:18 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:47:18 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:47:19 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:47:19 | 耗时 68 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:47:19 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:47:19 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:47:20 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 21:47:25 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 21:47:26 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:47:26 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:47:26 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:47:26 | 耗时 68 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:47:26 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:47:26 | 耗时 114 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T21:47:26.331+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 21:47:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:47:26 | 耗时 72 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:47:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:47:26 | 耗时 69 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:47:26 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:47:26 | 耗时 86 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:47:27 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:47:27 | 耗时 69 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:47:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:47:27 | 耗时 56 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 21:47:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:47:27 | 耗时 64 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:47:27 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 21:47:27 | 耗时 107 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T21:47:27.663+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 21:47:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:47:27 | 耗时 73 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:47:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:47:27 | 耗时 57 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 21:47:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:47:27 | 耗时 49 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 21:47:28 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:47:28 | 耗时 67 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:47:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:47:28 | 耗时 71 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:47:28 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:47:28 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:48:10 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:48:10 | 耗时 108 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:48:10 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:48:10 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:48:11 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:48:11 | 耗时 104 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:48:12 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:48:12 | 耗时 139 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:48:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:48:12 | 耗时 278 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:48:12 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:48:12 | 耗时 278 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:48:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:48:12 | 耗时 141 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:48:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:48:21 | 耗时 51 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:48:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:48:21 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:48:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:48:21 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:48:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:48:22 | 耗时 65 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:48:22 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:48:22 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:48:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:48:22 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:48:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:48:22 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:48:39 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:48:39 | 耗时 82 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 21:48:39 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:48:39 | 耗时 82 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:48:39 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:48:39 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 21:48:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:48:41 | 耗时 73 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:48:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:48:41 | 耗时 54 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:48:41 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:48:41 | 耗时 65 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 21:48:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:48:41 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:48:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:48:41 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 21:50:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:50:36 | 耗时 99 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:50:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:50:36 | 耗时 102 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:50:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:50:36 | 耗时 89 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:50:36 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:50:36 | 耗时 75 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:50:36 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:50:36 | 耗时 76 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:50:36 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:50:36 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:50:36 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:50:36 | 耗时 58 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:50:44 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:50:44 | 耗时 90 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 21:50:47 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:50:47 | 耗时 48 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:50:47 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:50:47 | 耗时 66 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 21:50:47 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:50:47 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 21:50:48 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:50:48 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:50:49 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:50:49 | 耗时 51 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:50:49 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:50:49 | 耗时 50 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 21:50:49 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:50:49 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 21:50:49 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:50:49 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:50:57 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:50:57 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:50:57 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:50:57 | 耗时 50 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:50:57 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:50:57 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:50:57 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:50:57 | 耗时 64 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 21:50:58 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:50:58 | 耗时 75 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 21:51:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:51:16 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:51:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 21:51:16 | 耗时 84 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:51:44 | 耗时 58 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:51:44 | 耗时 64 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:51:44 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:44 | 耗时 74 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:44 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:51:44 | 耗时 67 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:44 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:51:44 | 耗时 63 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:51:44 | 耗时 51 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:51:44 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:51:44 | 耗时 64 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:51:44 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 21:51:44 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:51:45 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:51:45 | 耗时 59 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:51:45 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:51:45 | 耗时 50 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 21:51:45 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:51:45 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:51:45 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:51:45 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 21:51:47 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:51:47 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:51:47 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:47 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:51:47 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:51:47 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:51:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:57 | 耗时 90 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:51:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:57 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:51:57 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:57 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:51:58 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:51:58 | 耗时 75 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:51:58 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:58 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:51:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:51:58 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:51:58 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:51:58 | 耗时 70 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:52:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:52:17 | 耗时 94 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:52:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:52:17 | 耗时 64 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:52:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:52:17 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:52:17 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 21:52:17 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:52:17 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:52:17 | 耗时 52 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:52:17 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:52:17 | 耗时 73 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:52:17 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:52:17 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:52:41 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:52:41 | 耗时 74 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:52:41 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:52:41 | 耗时 84 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:52:41 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:52:41 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:52:42 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:52:42 | 耗时 86 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:52:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:52:42 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:52:42 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:52:42 | 耗时 72 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:52:42 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:52:42 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:54:52 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904026369 paused.
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904026369 shutting down.
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904026369 paused.
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904026369 shutdown complete.
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 21:54:53 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 21:55:03 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 21:55:03 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 11588 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 21:55:03 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 21:55:04 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 21:55:05 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 21:55:05 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 21:55:05 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 46 ms. Found 0 Redis repository interfaces.
2020-12-25 21:55:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c52d7896] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c71f096e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:06 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:07 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:07 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:07 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:07 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 21:55:07 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 21:55:07 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 21:55:07 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 21:55:07 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 21:55:07 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 21:55:07 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4508 ms
2020-12-25 21:55:08 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 21:55:08 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 21:55:08 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 21:55:09 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 21:55:09 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 21:55:10 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 21:55:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 21:55:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 21:55:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 21:55:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 21:55:10 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 21:55:12 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 21:55:12 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 21:55:12 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 21:55:12 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 21:55:12 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 21:55:12 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608904512516'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 21:55:12 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 21:55:12 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 21:55:12 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7c79f2cf
2020-12-25 21:55:12 febs-shiro INFO  main p6spy 2020-12-25 21:55:12 | 耗时 71 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 21:55:21 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 21:55:21 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:55:21 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 21:55:21 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 21:55:21 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 21:55:21 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 21:55:22 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 21:55:22 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 21:55:24 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 21:55:24 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 21.705 seconds (JVM running for 24.513)
2020-12-25 21:55:25 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 21:55:25 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 21:55:25 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608904026369"'s failed in-progress jobs.
2020-12-25 21:55:25 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904512516 started.
2020-12-25 21:55:26 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 21:55:26 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 21:55:26 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 21:55:26 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 21:55:26 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 21:55:27 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 21:55:27 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 21:55:27 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 21:55:27 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 21:55:28 febs-shiro INFO  http-nio-8080-exec-10 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 21:55:31 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 21:55:32 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:55:32 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:55:32 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:55:32 | 耗时 61 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 21:55:32 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:55:32 | 耗时 118 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T21:55:32.377+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 21:55:32 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:55:32 | 耗时 66 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:55:32 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:55:32 | 耗时 66 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:55:32 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 21:55:32 | 耗时 77 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:55:33 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 21:55:33 | 耗时 69 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:55:33 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:33 | 耗时 69 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 21:55:34 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:34 | 耗时 69 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:55:34 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 21:55:34 | 耗时 122 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T21:55:33.900+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 21:55:34 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:34 | 耗时 67 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 21:55:34 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:34 | 耗时 71 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 21:55:34 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:34 | 耗时 65 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 21:55:35 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:55:35 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:55:35 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:55:35 | 耗时 68 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:55:35 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:55:35 | 耗时 62 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:55:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:40 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:55:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:40 | 耗时 71 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:55:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:40 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:55:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:55:41 | 耗时 71 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:55:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:41 | 耗时 66 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:55:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:55:41 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:55:41 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 21:55:41 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 21:59:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:59:20 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 21:59:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:59:20 | 耗时 73 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 21:59:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 21:59:20 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 21:59:21 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 21:59:21 | 耗时 81 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 21:59:21 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 21:59:21 | 耗时 52 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 21:59:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:59:21 | 耗时 70 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 21:59:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 21:59:21 | 耗时 58 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:00:09 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904512516 paused.
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904512516 shutting down.
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904512516 paused.
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904512516 shutdown complete.
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 22:00:10 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 22:00:19 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 22:00:19 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 9204 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 22:00:19 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 22:00:21 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 22:00:21 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 22:00:21 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 22:00:21 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 43 ms. Found 0 Redis repository interfaces.
2020-12-25 22:00:22 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:22 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f9376898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:22 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:22 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:22 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:22 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:22 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$fb28f970] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:22 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:23 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:00:23 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 22:00:23 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 22:00:23 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 22:00:23 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 22:00:24 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 22:00:24 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4818 ms
2020-12-25 22:00:24 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 22:00:24 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 22:00:24 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 22:00:25 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 22:00:25 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 22:00:26 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 22:00:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 22:00:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 22:00:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 22:00:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 22:00:26 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 22:00:28 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 22:00:28 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 22:00:28 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 22:00:29 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 22:00:29 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 22:00:29 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608904828922'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 22:00:29 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 22:00:29 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 22:00:29 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@337c0ee4
2020-12-25 22:00:29 febs-shiro INFO  main p6spy 2020-12-25 22:00:29 | 耗时 78 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 22:00:38 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 22:00:38 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 22:00:38 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:00:38 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 22:00:38 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:00:38 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 22:00:39 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 22:00:39 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 22:00:40 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 22:00:40 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 21.735 seconds (JVM running for 24.232)
2020-12-25 22:00:41 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 22:00:41 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 22:00:41 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 22:00:41 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 22:00:41 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 22:00:41 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 22:00:41 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 22:00:41 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608904512516"'s failed in-progress jobs.
2020-12-25 22:00:42 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904828922 started.
2020-12-25 22:00:42 febs-shiro INFO  http-nio-8080-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 22:00:42 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 22:00:42 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 4 ms
2020-12-25 22:00:42 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 22:00:43 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 22:01:27 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 22:01:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:01:27 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:01:28 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:01:28 | 耗时 53 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:01:28 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:01:28 | 耗时 113 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T22:01:28.028+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 22:01:28 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:01:28 | 耗时 67 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:01:28 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:01:28 | 耗时 73 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:01:28 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:01:28 | 耗时 81 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:01:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:01:29 | 耗时 55 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:01:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:01:29 | 耗时 70 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 22:01:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:01:29 | 耗时 57 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:01:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:01:29 | 耗时 59 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:01:29 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 22:01:29 | 耗时 133 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T22:01:29.430+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 22:01:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:01:29 | 耗时 62 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 22:01:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:01:29 | 耗时 68 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 22:01:32 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:01:32 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:01:32 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:01:32 | 耗时 62 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:01:32 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:01:32 | 耗时 74 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:01:51 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:01:51 | 耗时 74 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:01:51 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:01:51 | 耗时 79 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:01:51 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:01:51 | 耗时 94 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:01:52 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:01:52 | 耗时 66 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:01:52 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:01:52 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:01:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:01:52 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:01:53 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:01:53 | 耗时 62 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:02:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:02:04 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:02:05 | 耗时 67 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:02:05 | 耗时 69 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:02:05 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:02:05 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:02:05 | 耗时 58 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:02:05 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:02:05 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:02:05 | 耗时 81 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:02:05 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:02:05 | 耗时 68 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:02:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:02:06 | 耗时 54 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:02:06 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:02:06 | 耗时 79 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:02:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:02:06 | 耗时 52 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:03:15 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904828922 paused.
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904828922 shutting down.
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904828922 paused.
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608904828922 shutdown complete.
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 22:03:16 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 22:03:25 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 22:03:25 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 2848 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 22:03:25 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 22:03:27 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 22:03:27 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 22:03:27 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 22:03:27 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 40 ms. Found 0 Redis repository interfaces.
2020-12-25 22:03:28 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:28 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c3de5ea0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:28 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:28 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:28 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:28 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:28 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c5cfef78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:28 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:29 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:29 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:29 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:29 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:03:29 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 22:03:29 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 22:03:29 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 22:03:29 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 22:03:29 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 22:03:29 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4290 ms
2020-12-25 22:03:30 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 22:03:30 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 22:03:30 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 22:03:31 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 22:03:31 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 22:03:32 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 22:03:32 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 22:03:32 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 22:03:32 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 22:03:32 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 22:03:32 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 22:03:33 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 22:03:33 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 22:03:33 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 22:03:34 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 22:03:34 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 22:03:34 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608905013872'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 22:03:34 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 22:03:34 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 22:03:34 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@375ff309
2020-12-25 22:03:35 febs-shiro INFO  main p6spy 2020-12-25 22:03:35 | 耗时 203 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 22:03:44 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 22:03:44 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 22:03:44 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:03:44 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 22:03:44 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:03:45 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 22:03:45 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 22:03:45 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 22:03:45 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 22:03:45 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 21.031 seconds (JVM running for 23.53)
2020-12-25 22:03:46 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 22:03:46 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 22:03:46 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 22:03:46 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 22:03:46 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 22:03:46 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 22:03:47 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 22:03:47 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608904828922"'s failed in-progress jobs.
2020-12-25 22:03:47 febs-shiro INFO  RMI TCP Connection(2)-172.20.10.2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 22:03:47 febs-shiro INFO  RMI TCP Connection(2)-172.20.10.2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 22:03:47 febs-shiro INFO  RMI TCP Connection(2)-172.20.10.2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 22:03:47 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905013872 started.
2020-12-25 22:03:47 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 22:03:48 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 22:04:12 febs-shiro INFO  http-nio-8080-exec-7 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 22:04:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:04:12 | 耗时 104 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:04:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:04:12 | 耗时 110 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:04:13 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:04:13 | 耗时 173 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T22:04:12.968+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 22:04:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:04:13 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:04:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:04:13 | 耗时 65 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:04:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:04:13 | 耗时 76 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:04:14 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:04:14 | 耗时 62 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:04:14 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:04:14 | 耗时 57 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 22:04:14 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:04:14 | 耗时 102 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:04:14 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:04:14 | 耗时 83 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:04:14 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 22:04:14 | 耗时 184 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T22:04:14.319+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 22:04:14 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:04:14 | 耗时 73 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 22:04:14 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:04:14 | 耗时 68 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 22:04:16 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:04:16 | 耗时 77 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:04:16 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:04:16 | 耗时 77 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:04:16 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:04:16 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:04:21 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:04:21 | 耗时 137 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '3' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905013872 paused.
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905013872 shutting down.
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905013872 paused.
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905013872 shutdown complete.
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 22:09:36 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 22:09:42 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 22:09:42 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 5260 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 22:09:42 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 22:09:43 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 22:09:43 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 22:09:43 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 22:09:43 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1203a7fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$13f538d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:09:44 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 22:09:44 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 22:09:44 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 22:09:44 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 22:09:45 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 22:09:45 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2516 ms
2020-12-25 22:09:45 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 22:09:45 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 22:09:45 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 22:09:46 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 22:09:46 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 22:09:47 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 22:09:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 22:09:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 22:09:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 22:09:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 22:09:47 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 22:09:48 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 22:09:48 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 22:09:48 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 22:09:48 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 22:09:48 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 22:09:48 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608905388558'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 22:09:48 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 22:09:48 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 22:09:48 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5759edff
2020-12-25 22:09:48 febs-shiro INFO  main p6spy 2020-12-25 22:09:48 | 耗时 58 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 22:09:55 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 22:09:55 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 22:09:55 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:09:55 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 22:09:55 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:09:55 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 22:09:56 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 22:09:56 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 22:09:56 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 22:09:56 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 14.68 seconds (JVM running for 16.113)
2020-12-25 22:09:57 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 22:09:57 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 22:09:57 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 22:09:57 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 22:09:57 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 22:09:57 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 22:09:58 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 22:09:58 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 22:09:58 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 2 ms
2020-12-25 22:09:58 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 22:09:58 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 22:09:58 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608905013872"'s failed in-progress jobs.
2020-12-25 22:09:58 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905388558 started.
2020-12-25 22:09:58 febs-shiro INFO  http-nio-8080-exec-4 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 22:10:14 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 2 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 22:10:19 febs-shiro INFO  http-nio-8080-exec-10 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 22:10:19 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:10:19 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:10:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:10:20 | 耗时 51 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:10:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:10:20 | 耗时 151 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T22:10:20.105+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 22:10:20 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:10:20 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:10:20 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:10:20 | 耗时 70 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:10:20 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:10:20 | 耗时 84 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:10:21 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:10:21 | 耗时 64 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:10:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:10:21 | 耗时 63 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 22:10:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:10:21 | 耗时 62 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:10:21 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 22:10:21 | 耗时 110 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T22:10:21.381+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 22:10:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:10:21 | 耗时 64 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:10:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:10:21 | 耗时 53 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 22:10:21 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:10:21 | 耗时 55 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 22:10:22 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:10:22 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:10:22 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:10:22 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:10:23 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:10:23 | 耗时 63 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:10:24 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:10:24 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:13:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:13:58 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:13:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:13:58 | 耗时 71 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:13:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:13:58 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:13:58 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:13:58 | 耗时 57 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:13:59 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:13:59 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:13:59 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:13:59 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:13:59 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:13:59 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:14:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:14:00 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:14:10 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:14:10 | 耗时 57 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 22:14:12 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:14:12 | 耗时 50 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 22:14:12 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:14:12 | 耗时 74 ms | SQL 语句：
SELECT COUNT(1) FROM t_role r WHERE 1 = 1;
2020-12-25 22:14:12 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:14:12 | 耗时 63 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-12-25 22:14:13 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:14:13 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:14:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:14:13 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:14:13 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:14:13 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:14:14 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:14:14 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:14:14 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:14:14 | 耗时 51 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:14:14 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:14:14 | 耗时 60 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:14:15 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:14:15 | 耗时 70 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:14:15 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:14:15 | 耗时 51 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:14:20 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:14:20 | 耗时 58 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:14:20 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:14:20 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:14:20 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:14:20 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:14:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:14:20 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:14:20 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:14:20 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:14:20 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:14:20 | 耗时 71 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:14:21 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:14:21 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:14:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:14:21 | 耗时 64 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:14:21 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:14:21 | 耗时 64 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:14:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:14:21 | 耗时 63 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:14:23 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:14:23 | 耗时 75 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:15:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:15:20 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:15:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:15:20 | 耗时 68 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:15:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:15:20 | 耗时 84 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:15:21 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:15:21 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:15:21 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:15:21 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:15:21 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:15:21 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:15:21 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:15:21 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:15:24 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:15:24 | 耗时 72 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:15:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:15:41 | 耗时 77 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:15:43 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:15:43 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:15:44 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:15:44 | 耗时 51 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:15:44 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:15:44 | 耗时 83 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:15:44 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:15:44 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:15:44 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:15:44 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:15:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:15:44 | 耗时 68 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:15:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:15:44 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:15:45 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:15:45 | 耗时 68 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:15:48 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:15:48 | 耗时 76 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:15:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:15:58 | 耗时 65 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:15:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:15:58 | 耗时 61 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:15:59 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:15:59 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:15:59 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:15:59 | 耗时 60 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:15:59 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:15:59 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:15:59 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:15:59 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:15:59 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:15:59 | 耗时 60 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:16:02 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:16:02 | 耗时 58 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:16:11 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:16:11 | 耗时 63 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:16:18 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:16:18 | 耗时 61 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:16:18 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:16:18 | 耗时 59 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:16:18 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:16:18 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:16:19 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:16:19 | 耗时 87 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:16:19 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:16:19 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:16:19 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:16:19 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:16:19 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:16:19 | 耗时 75 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:16:43 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:16:43 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:16:43 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:16:43 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:16:43 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:16:43 | 耗时 53 ms | SQL 语句：
SELECT COUNT(1) FROM t_users u WHERE 1 = 1;
2020-12-25 22:16:43 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:16:43 | 耗时 54 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:16:43 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:16:43 | 耗时 52 ms | SQL 语句：
SELECT u.weChatname weChatname, u.CREATE_TIME CREATE_TIME FROM t_users u ORDER BY Id ASC LIMIT 0,10;
2020-12-25 22:17:16 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:17:16 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:17:16 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:17:16 | 耗时 73 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:17:16 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:17:16 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:17:17 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:17:17 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:17:17 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:17:17 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:17:17 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:17:17 | 耗时 56 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:17:17 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:17:17 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:17:18 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:17:18 | 耗时 55 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:17:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:17:20 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:17:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:17:20 | 耗时 54 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:17:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:17:20 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:17:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:17:20 | 耗时 53 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:17:20 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:17:20 | 耗时 64 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:17:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:17:20 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:17:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:17:20 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:17:51 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:17:51 | 耗时 47 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:17:51 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:17:51 | 耗时 47 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:17:51 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:17:51 | 耗时 65 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:18:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:18:12 | 耗时 21180 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:18:12 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:18:12 | 耗时 21184 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:18:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:18:12 | 耗时 124 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:18:12 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:18:12 | 耗时 124 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:18:13 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:18:13 | 耗时 56 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:18:13 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:18:13 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:18:13 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:18:13 | 耗时 50 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:18:13 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:18:13 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:20:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:20:56 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:20:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:20:56 | 耗时 51 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:20:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:20:56 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:20:56 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:20:56 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:20:56 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:20:56 | 耗时 72 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:20:56 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:20:56 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:20:56 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:20:56 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:20:58 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:20:58 | 耗时 72 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:23:17 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:23:17 | 耗时 93 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:23:17 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:23:17 | 耗时 80 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:23:17 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:23:17 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:23:18 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:23:18 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:23:18 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:23:18 | 耗时 61 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:23:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:23:18 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:23:18 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:23:18 | 耗时 69 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:23:18 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:23:18 | 耗时 69 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:23:50 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:23:50 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:23:50 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:23:50 | 耗时 72 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:23:50 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:23:50 | 耗时 100 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:23:50 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:23:50 | 耗时 59 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:23:51 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:23:51 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:23:51 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:23:51 | 耗时 54 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:23:51 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:23:51 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:23:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:23:52 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:26:50 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:26:50 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:26:50 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:26:50 | 耗时 61 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:26:51 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:26:51 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:26:51 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:26:51 | 耗时 59 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:26:51 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:26:51 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:26:51 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:26:51 | 耗时 74 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:26:51 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:26:51 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:26:56 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:26:56 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:26:56 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:26:56 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:26:56 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:26:56 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:26:58 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:26:58 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:26:58 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:26:58 | 耗时 51 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:26:58 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:26:58 | 耗时 64 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:26:58 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:26:58 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:26:58 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:26:58 | 耗时 55 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:28:37 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:28:37 | 耗时 96 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:28:37 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:28:37 | 耗时 75 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:28:37 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:28:37 | 耗时 83 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:28:38 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:28:38 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:28:38 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:28:38 | 耗时 61 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:28:38 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:28:38 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:28:38 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:28:38 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:28:40 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:28:40 | 耗时 76 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:28:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:28:40 | 耗时 76 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:28:40 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:28:40 | 耗时 52 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:28:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:28:41 | 耗时 72 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:28:49 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:28:49 | 耗时 86 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:28:49 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:28:49 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:28:49 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:28:49 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:28:50 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:28:50 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:28:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:28:50 | 耗时 67 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:28:50 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:28:50 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:28:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:28:50 | 耗时 50 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:29:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:29:57 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:29:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:29:57 | 耗时 67 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:29:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:29:57 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:29:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:29:58 | 耗时 52 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:29:58 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:29:58 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:29:58 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:29:58 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:29:58 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:29:58 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:30:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:30:00 | 耗时 85 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:30:02 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:30:02 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:30:02 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:30:02 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:30:02 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:30:02 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:30:03 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:30:03 | 耗时 70 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:30:03 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:30:03 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:30:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:30:03 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:30:03 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:30:03 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:30:08 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:30:08 | 耗时 78 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:30:25 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:30:25 | 耗时 77 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:30:25 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:30:25 | 耗时 81 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:30:25 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:30:25 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:30:26 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:30:26 | 耗时 57 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:30:26 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:30:26 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:30:26 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:30:26 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:30:26 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:30:26 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:30:29 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:30:29 | 耗时 58 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:30:57 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:30:57 | 耗时 67 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:30:57 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:30:57 | 耗时 81 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:30:57 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:30:57 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:30:58 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:30:58 | 耗时 79 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:30:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:30:58 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:30:58 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:30:58 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:30:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:30:58 | 耗时 58 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:30:59 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:30:59 | 耗时 96 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:30:59 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:30:59 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:31:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:31:04 | 耗时 74 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:31:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:31:04 | 耗时 65 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:31:04 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:31:04 | 耗时 80 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:31:04 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:31:04 | 耗时 62 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:31:04 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:31:04 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:31:04 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:31:04 | 耗时 53 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:31:04 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:31:04 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:31:08 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:31:08 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:31:08 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:31:08 | 耗时 76 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:31:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:31:40 | 耗时 96 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:31:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:31:40 | 耗时 96 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:31:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:31:40 | 耗时 97 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:31:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:31:41 | 耗时 51 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:31:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:31:41 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:31:41 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:31:41 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:31:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:31:41 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:31:42 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:31:42 | 耗时 52 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:31:42 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:31:42 | 耗时 50 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:31:58 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:31:58 | 耗时 77 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:31:58 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:31:58 | 耗时 74 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:31:58 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:31:58 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:31:58 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:31:58 | 耗时 62 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:31:58 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:31:58 | 耗时 54 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:31:58 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:31:58 | 耗时 54 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:31:59 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:31:59 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:31:59 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:31:59 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:32:00 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:32:00 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:33:06 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:33:06 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:33:06 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:33:06 | 耗时 73 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:33:06 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:33:06 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:33:06 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:33:06 | 耗时 62 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:33:06 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:33:06 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:33:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:33:06 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:33:07 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:33:07 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:33:09 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:33:09 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:33:09 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:33:09 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:33:09 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:33:09 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:33:10 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:33:10 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:33:10 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:33:10 | 耗时 57 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:33:10 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:33:10 | 耗时 64 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:33:10 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:33:10 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:33:10 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:33:10 | 耗时 55 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:33:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:33:20 | 耗时 74 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:33:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:33:20 | 耗时 102 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:33:20 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:33:20 | 耗时 66 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:33:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:33:20 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:33:21 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:33:21 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:33:21 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:33:21 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:33:21 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:33:21 | 耗时 75 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:33:21 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:33:21 | 耗时 49 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:33:21 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:33:21 | 耗时 67 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:33:22 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:33:22 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:33:42 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:33:42 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:33:42 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:33:42 | 耗时 49 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:33:42 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:33:42 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:33:43 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:33:43 | 耗时 70 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:33:43 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:33:43 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:33:43 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:33:43 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:33:43 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:33:43 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:33:43 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:33:43 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:33:43 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:33:43 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:33:43 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:33:43 | 耗时 52 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:33:45 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:33:45 | 耗时 55 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:33:45 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:33:45 | 耗时 71 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:34:05 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:34:05 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:34:05 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:34:05 | 耗时 61 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:34:05 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:34:05 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:34:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:34:05 | 耗时 60 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:34:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:34:05 | 耗时 80 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:34:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:34:05 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:34:06 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:34:06 | 耗时 54 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:34:06 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:34:06 | 耗时 54 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:34:06 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:34:06 | 耗时 54 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:34:06 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:34:06 | 耗时 62 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:34:06 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:34:06 | 耗时 71 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:34:06 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:34:06 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:35:37 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:35:37 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:35:37 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:35:37 | 耗时 55 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:35:37 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:35:37 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:35:38 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:35:38 | 耗时 153 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:35:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:35:38 | 耗时 63 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:35:38 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:35:38 | 耗时 62 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:35:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:35:38 | 耗时 58 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:35:39 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:35:39 | 耗时 64 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:35:39 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:35:39 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:35:55 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:35:55 | 耗时 52 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:35:55 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:35:55 | 耗时 84 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:35:55 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:35:55 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:35:56 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:35:56 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:35:56 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:35:56 | 耗时 55 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:35:56 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:35:56 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:35:56 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:35:56 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:36:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:36:01 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:36:02 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:36:02 | 耗时 76 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:36:28 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:36:28 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:36:28 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:36:28 | 耗时 50 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:36:28 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:36:28 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:36:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:36:29 | 耗时 86 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:36:29 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:36:29 | 耗时 71 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:36:29 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:36:29 | 耗时 71 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:36:29 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:36:29 | 耗时 64 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:36:30 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:36:30 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:36:30 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:36:30 | 耗时 62 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:36:47 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:36:47 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:36:47 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:36:47 | 耗时 74 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:36:47 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:36:47 | 耗时 85 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:36:47 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:36:47 | 耗时 61 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:36:48 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:36:48 | 耗时 54 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:36:48 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:36:48 | 耗时 54 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:36:48 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:36:48 | 耗时 50 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:36:48 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:36:48 | 耗时 59 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:37:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:05 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:37:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:05 | 耗时 55 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:37:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:05 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:37:05 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:37:05 | 耗时 62 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:37:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:37:05 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:37:05 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:37:05 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:37:05 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:37:05 | 耗时 52 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:37:08 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:37:08 | 耗时 78 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 22:37:10 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:37:10 | 耗时 72 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:37:10 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:37:10 | 耗时 71 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:37:10 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:37:10 | 耗时 74 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:37:11 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:37:11 | 耗时 76 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:37:11 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:37:11 | 耗时 57 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:37:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:11 | 耗时 72 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:37:11 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:37:11 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:37:11 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:37:11 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:37:19 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:37:19 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Scott' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:37:19 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:37:19 | 耗时 56 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '2');
2020-12-25 22:37:19 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:37:19 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:37:19 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:37:19 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:37:19 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:37:19 | 耗时 55 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:37:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:37:24 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Margot' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:37:25 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:37:25 | 耗时 60 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '7');
2020-12-25 22:37:25 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:37:25 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:37:25 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:37:25 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:37:25 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:25 | 耗时 62 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:37:30 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:37:30 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:37:30 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:37:30 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:37:30 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:37:30 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:37:30 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:37:30 | 耗时 54 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:37:30 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:37:30 | 耗时 49 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:37:30 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:37:30 | 耗时 52 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:37:30 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:37:30 | 耗时 76 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:37:32 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:32 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_role r WHERE 1 = 1;
2020-12-25 22:37:32 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:37:32 | 耗时 58 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 22:37:32 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:32 | 耗时 57 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-12-25 22:37:39 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:37:39 | 耗时 92 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:37:40 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:37:40 | 耗时 72 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 22:37:47 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:37:47 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:37:47 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:37:47 | 耗时 55 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:37:47 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:37:47 | 耗时 58 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:37:47 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:37:47 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:37:47 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:37:47 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:37:52 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:52 | 耗时 93 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:37:52 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:52 | 耗时 68 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:37:52 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:37:52 | 耗时 80 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:37:53 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:37:53 | 耗时 51 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:37:53 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:37:53 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:37:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:37:53 | 耗时 66 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:37:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:37:53 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:38:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:38:20 | 耗时 51 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:38:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:38:21 | 耗时 55 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:38:21 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:38:21 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:38:21 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:38:21 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:38:21 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:38:21 | 耗时 57 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:38:21 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:38:21 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:38:21 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:38:21 | 耗时 50 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:38:22 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:38:22 | 耗时 52 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:38:22 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:38:22 | 耗时 65 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:38:22 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:38:22 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:38:22 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:38:22 | 耗时 65 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:38:22 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:38:22 | 耗时 77 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:38:22 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:38:22 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:38:24 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:38:24 | 耗时 61 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:38:27 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:38:27 | 耗时 73 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:38:33 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:38:33 | 耗时 70 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:38:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:38:35 | 耗时 60 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:38:49 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:38:49 | 耗时 60 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:38:49 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:38:49 | 耗时 72 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:38:49 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:38:49 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:38:50 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:38:50 | 耗时 50 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:38:50 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:38:50 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:38:50 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:38:50 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:38:50 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:38:50 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:38:51 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:38:51 | 耗时 60 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:39:25 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:39:25 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:39:25 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:39:25 | 耗时 74 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:39:25 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:39:25 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:39:26 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:39:26 | 耗时 68 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:39:26 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:39:26 | 耗时 54 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:39:26 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:39:26 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:39:26 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:39:26 | 耗时 62 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:39:27 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:39:27 | 耗时 63 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:39:32 febs-shiro INFO  http-nio-8080-exec-5 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 22:39:36 febs-shiro INFO  http-nio-8080-exec-9 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 22:39:36 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:39:36 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:39:36 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:39:36 | 耗时 60 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:39:36 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:39:36 | 耗时 110 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T22:39:36.429+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 22:39:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:39:36 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:39:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:39:36 | 耗时 49 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:39:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:39:36 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:39:38 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:39:38 | 耗时 77 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:39:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:39:38 | 耗时 74 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 22:39:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:39:38 | 耗时 65 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:39:38 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 22:39:38 | 耗时 119 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T22:39:38.663+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 22:39:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:39:38 | 耗时 55 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:39:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:39:38 | 耗时 55 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 22:39:38 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:39:38 | 耗时 61 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 22:39:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:39:40 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:39:40 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:39:40 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:39:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:39:40 | 耗时 61 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:39:41 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:39:41 | 耗时 78 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:40:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:40:28 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:40:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:40:28 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:40:28 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:40:28 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:40:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:40:29 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:40:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:40:29 | 耗时 62 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:40:29 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:40:29 | 耗时 86 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:40:29 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:40:29 | 耗时 72 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:40:32 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:40:32 | 耗时 74 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:41:37 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:41:37 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:42:02 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:42:02 | 耗时 58 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:42:02 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:42:02 | 耗时 71 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:42:03 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:42:03 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:42:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:42:03 | 耗时 72 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:42:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:42:03 | 耗时 57 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:42:03 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:42:03 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:42:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:42:03 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:42:03 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:42:03 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:42:03 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:42:03 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:42:04 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:42:04 | 耗时 71 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:42:04 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:42:04 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:42:04 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:42:04 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:42:04 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:42:04 | 耗时 67 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:42:05 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:42:05 | 耗时 58 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:42:11 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:42:11 | 耗时 72 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:42:29 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:42:29 | 耗时 81 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:42:29 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:42:29 | 耗时 64 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:42:30 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:42:30 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:42:30 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:42:30 | 耗时 77 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:42:30 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:42:30 | 耗时 63 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:42:30 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:42:30 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:42:30 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:42:30 | 耗时 71 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:42:31 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:42:31 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:42:31 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:42:31 | 耗时 81 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:42:31 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:42:31 | 耗时 67 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:42:33 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:42:33 | 耗时 63 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:42:50 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:42:50 | 耗时 64 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-12-25 22:42:52 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:42:52 | 耗时 62 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:42:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:42:52 | 耗时 67 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:42:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:42:52 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:42:55 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:42:55 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:42:55 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:42:55 | 耗时 54 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:42:55 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:42:55 | 耗时 75 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:42:55 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:42:55 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:42:55 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:42:55 | 耗时 59 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:42:59 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:42:59 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:42:59 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:42:59 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:42:59 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:42:59 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:43:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:43:00 | 耗时 56 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:43:00 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:43:00 | 耗时 70 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:43:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:43:00 | 耗时 50 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:43:00 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:43:00 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:43:02 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:43:02 | 耗时 81 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:43:02 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:43:02 | 耗时 72 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:43:02 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:43:02 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:43:02 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:43:02 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:43:02 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:43:02 | 耗时 70 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:43:04 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:43:04 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:43:15 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:43:15 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:43:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:43:15 | 耗时 136 ms | SQL 语句：
UPDATE t_user SET DEPT_ID = 1, EMAIL = 'mrbird@qq.com', MOBILE = '17864399615', STATUS = '1', MODIFY_TIME = '2020-12-25T22:43:15.184+0800', SSEX = '0', DESCRIPTION = '我是帅比作者。' WHERE USER_ID = 1;
2020-12-25 22:43:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:43:15 | 耗时 134 ms | SQL 语句：
DELETE FROM t_user_role WHERE (USER_ID IN ('1'));
2020-12-25 22:43:15 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:43:15 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:43:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:43:15 | 耗时 116 ms | SQL 语句：
DELETE FROM t_user_data_permission WHERE (USER_ID IN ('1'));
2020-12-25 22:43:16 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:43:16 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:43:16 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:43:16 | 耗时 343 ms | SQL 语句：
UPDATE t_user SET DEPT_ID = 1, EMAIL = 'mrbird@qq.com', MOBILE = '17864399615', STATUS = '1', MODIFY_TIME = '2020-12-25T22:43:15.879+0800', SSEX = '0', DESCRIPTION = '我是帅比作者。' WHERE USER_ID = 1;
2020-12-25 22:43:16 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:43:16 | 耗时 175 ms | SQL 语句：
DELETE FROM t_user_role WHERE (USER_ID IN ('1'));
2020-12-25 22:43:16 febs-shiro INFO  Febs-Async-Thread3 p6spy 2020-12-25 22:43:16 | 耗时 154 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改用户', 1177, 'cc.mrbird.febs.system.controller.UserController.updateUser()', ' user: "User(userId=1, username=null, password=null, deptId=1, email=mrbird@qq.com, mobile=17864399615, status=1, createTime=null, modifyTime=Fri Dec 25 22:43:15 CST 2020, lastLoginTime=null, sex=0, avatar=null, theme=null, isTab=null, description=我是帅比作者。, deptName=null, createTimeFrom=null, createTimeTo=null, roleId=1, roleName=null, deptIds=1,2,3,4,5,6)"', '172.20.10.2', '2020-12-25T22:43:16.301+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 22:43:16 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:43:16 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:43:16 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:43:16 | 耗时 75 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:43:16 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:43:16 | 耗时 76 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:43:16 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:43:16 | 耗时 127 ms | SQL 语句：
DELETE FROM t_user_data_permission WHERE (USER_ID IN ('1'));
2020-12-25 22:43:16 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:43:16 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:43:17 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:43:17 | 耗时 1086 ms | SQL 语句：
UPDATE t_user SET DEPT_ID = 1, EMAIL = 'mrbird@qq.com', MOBILE = '17864399615', STATUS = '1', MODIFY_TIME = '2020-12-25T22:43:16.105+0800', SSEX = '0', DESCRIPTION = '我是帅比作者。' WHERE USER_ID = 1;
2020-12-25 22:43:17 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:43:17 | 耗时 129 ms | SQL 语句：
DELETE FROM t_user_role WHERE (USER_ID IN ('1'));
2020-12-25 22:43:17 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:43:17 | 耗时 61 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:43:17 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:43:17 | 耗时 64 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:43:17 febs-shiro INFO  Febs-Async-Thread4 p6spy 2020-12-25 22:43:17 | 耗时 130 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改用户', 1508, 'cc.mrbird.febs.system.controller.UserController.updateUser()', ' user: "User(userId=1, username=null, password=null, deptId=1, email=mrbird@qq.com, mobile=17864399615, status=1, createTime=null, modifyTime=Fri Dec 25 22:43:15 CST 2020, lastLoginTime=null, sex=0, avatar=null, theme=null, isTab=null, description=我是帅比作者。, deptName=null, createTimeFrom=null, createTimeTo=null, roleId=1, roleName=null, deptIds=1,2,3,4,5,6)"', '172.20.10.2', '2020-12-25T22:43:17.258+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 22:43:17 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:43:17 | 耗时 81 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:43:17 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:43:17 | 耗时 125 ms | SQL 语句：
DELETE FROM t_user_data_permission WHERE (USER_ID IN ('1'));
2020-12-25 22:43:17 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:43:17 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:43:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:43:18 | 耗时 72 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:43:18 febs-shiro INFO  Febs-Async-Thread5 p6spy 2020-12-25 22:43:18 | 耗时 118 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改用户', 2087, 'cc.mrbird.febs.system.controller.UserController.updateUser()', ' user: "User(userId=1, username=null, password=null, deptId=1, email=mrbird@qq.com, mobile=17864399615, status=1, createTime=null, modifyTime=Fri Dec 25 22:43:16 CST 2020, lastLoginTime=null, sex=0, avatar=null, theme=null, isTab=null, description=我是帅比作者。, deptName=null, createTimeFrom=null, createTimeTo=null, roleId=1, roleName=null, deptIds=1,2,3,4,5,6)"', '172.20.10.2', '2020-12-25T22:43:18.135+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 22:43:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:43:18 | 耗时 64 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:43:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:43:18 | 耗时 63 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:43:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:43:18 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:43:19 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:43:19 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:43:19 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:43:19 | 耗时 70 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:43:19 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:43:19 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept ORDER BY ORDER_NUM ASC;
2020-12-25 22:43:19 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:43:19 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:43:20 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:43:20 | 耗时 63 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-12-25 22:44:10 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:44:10 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:44:10 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:44:10 | 耗时 49 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:44:10 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:44:10 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:44:11 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:44:11 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:44:11 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:44:11 | 耗时 66 ms | SQL 语句：
SELECT COUNT(1) FROM t_user u WHERE 1 = 1;
2020-12-25 22:44:11 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:44:11 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:44:11 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:44:11 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-12-25 22:44:11 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:44:11 | 耗时 51 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:44:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:44:11 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:44:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:44:11 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:44:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:44:13 | 耗时 68 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:44:40 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:44:40 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:44:40 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:44:40 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:44:41 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:44:41 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:44:41 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:44:41 | 耗时 72 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:44:41 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:44:41 | 耗时 67 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:44:41 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:44:41 | 耗时 64 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:44:41 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:44:41 | 耗时 57 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:44:41 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:44:41 | 耗时 81 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:44:43 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:44:43 | 耗时 76 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:44:59 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:44:59 | 耗时 80 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:44:59 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:44:59 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:44:59 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:44:59 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:45:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:45:00 | 耗时 54 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:45:00 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:45:00 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:45:00 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:45:00 | 耗时 73 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:45:00 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:45:00 | 耗时 96 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:45:46 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:45:46 | 耗时 77 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:45:47 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:45:47 | 耗时 67 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:45:47 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:45:47 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:45:47 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:45:47 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:45:47 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:45:47 | 耗时 59 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:45:47 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:45:47 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:45:47 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:45:47 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:45:47 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:45:47 | 耗时 50 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:45:47 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:45:47 | 耗时 74 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:45:48 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:45:48 | 耗时 132 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:45:48 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:45:48 | 耗时 79 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:45:48 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:45:48 | 耗时 97 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:45:48 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:45:48 | 耗时 67 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:45:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:45:49 | 耗时 58 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:46:09 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:46:09 | 耗时 513 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:46:09 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:46:09 | 耗时 513 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:46:11 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:46:11 | 耗时 2199 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:46:11 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:46:11 | 耗时 2207 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:46:11 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:46:11 | 耗时 2205 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:46:11 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:46:11 | 耗时 2207 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:46:11 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:46:11 | 耗时 313 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:46:12 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:46:12 | 耗时 1297 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:46:12 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:46:12 | 耗时 1305 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:46:12 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:46:12 | 耗时 1362 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:46:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:46:13 | 耗时 449 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:46:13 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:46:13 | 耗时 393 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:46:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:46:13 | 耗时 61 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:46:13 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:46:13 | 耗时 76 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:46:13 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:46:13 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:46:13 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:46:13 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:46:20 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:46:20 | 耗时 56 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:49:00 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905388558 paused.
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905388558 shutting down.
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905388558 paused.
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608905388558 shutdown complete.
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 22:49:01 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 22:49:06 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 22:49:06 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 6936 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 22:49:06 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 22:49:07 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 22:49:08 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 22:49:08 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 22:49:08 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2020-12-25 22:49:08 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:08 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b3dcacd5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$b5ce3dad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:09 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:49:10 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 22:49:10 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 22:49:10 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 22:49:10 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 22:49:10 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 22:49:10 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4155 ms
2020-12-25 22:49:10 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 22:49:11 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 22:49:11 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 22:49:12 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 22:49:12 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 22:49:12 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 22:49:12 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 22:49:12 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 22:49:12 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 22:49:12 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 22:49:12 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 22:49:15 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 22:49:15 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 22:49:15 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 22:49:15 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 22:49:15 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 22:49:15 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608907755123'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 22:49:15 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 22:49:15 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 22:49:15 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@641e67fa
2020-12-25 22:49:15 febs-shiro INFO  main p6spy 2020-12-25 22:49:15 | 耗时 67 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 22:49:23 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 22:49:23 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 22:49:23 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:49:23 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 22:49:23 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:49:24 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 22:49:24 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 22:49:24 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 22:49:25 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 22:49:25 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 19.964 seconds (JVM running for 22.98)
2020-12-25 22:49:26 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 22:49:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 22:49:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 22:49:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 22:49:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 22:49:27 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 22:49:27 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 22:49:27 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608905388558"'s failed in-progress jobs.
2020-12-25 22:49:27 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608907755123 started.
2020-12-25 22:49:27 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 22:49:27 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 22:49:27 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 4 ms
2020-12-25 22:49:27 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 22:49:28 febs-shiro INFO  http-nio-8080-exec-5 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 22:49:37 febs-shiro INFO  http-nio-8080-exec-6 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 22:49:37 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:49:37 | 耗时 100 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:49:37 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:49:37 | 耗时 88 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:49:37 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:49:37 | 耗时 145 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T22:49:37.501+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 22:49:37 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:49:37 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:49:38 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:49:38 | 耗时 945 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:49:39 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:49:39 | 耗时 569 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:49:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:49:41 | 耗时 202 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:49:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:49:41 | 耗时 110 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 22:49:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:49:41 | 耗时 114 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:49:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:49:41 | 耗时 91 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:49:41 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 22:49:41 | 耗时 203 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T22:49:41.328+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 22:49:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:49:41 | 耗时 80 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 22:49:41 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:49:41 | 耗时 107 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 22:49:46 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:49:46 | 耗时 75 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:49:46 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:49:46 | 耗时 75 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:49:46 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:49:46 | 耗时 62 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:49:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:49:49 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:50:34 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:50:34 | 耗时 79 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:50:34 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:50:34 | 耗时 65 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:50:34 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:50:34 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:50:35 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:50:35 | 耗时 74 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:50:35 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:50:35 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:50:35 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:50:35 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:50:35 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:50:35 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:50:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:50:35 | 耗时 56 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:50:41 febs-shiro INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 22:50:45 febs-shiro INFO  http-nio-8080-exec-10 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 22:50:45 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:50:45 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:50:45 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:50:45 | 耗时 74 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 22:50:45 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:50:45 | 耗时 132 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T22:50:45.748+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 22:50:46 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:50:46 | 耗时 75 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:50:46 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:50:46 | 耗时 54 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:50:46 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:50:46 | 耗时 48 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:50:47 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:50:47 | 耗时 64 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:50:47 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:50:47 | 耗时 58 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 22:50:47 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:50:47 | 耗时 54 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:50:47 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:50:47 | 耗时 56 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 22:50:47 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 22:50:47 | 耗时 117 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T22:50:47.717+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 22:50:47 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:50:47 | 耗时 50 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 22:50:47 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:50:47 | 耗时 60 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 22:50:48 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:50:48 | 耗时 49 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:50:48 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:50:48 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:50:49 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:50:49 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:50:50 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:50:50 | 耗时 51 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:51:01 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:51:01 | 耗时 65 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:51:52 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:51:52 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:51:52 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:51:52 | 耗时 90 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:51:52 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:51:52 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:51:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:51:53 | 耗时 52 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:51:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:51:53 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:51:53 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:51:53 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:51:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:51:53 | 耗时 58 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:51:54 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:51:54 | 耗时 62 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:51:56 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:51:56 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:51:57 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:51:57 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:51:57 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:51:57 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:51:57 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:51:57 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:51:57 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:51:57 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:51:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:51:57 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:51:57 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:51:57 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:52:04 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:52:04 | 耗时 67 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:52:19 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:52:19 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:52:19 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:52:19 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:52:19 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:52:19 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:52:20 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:52:20 | 耗时 75 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:52:20 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:20 | 耗时 62 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:52:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:20 | 耗时 62 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:52:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:20 | 耗时 72 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:52:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:52:20 | 耗时 55 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:52:23 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:52:23 | 耗时 56 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:52:26 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:26 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:52:26 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:26 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:52:26 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:26 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:52:27 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:52:27 | 耗时 54 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:52:27 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:52:27 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:52:27 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:52:27 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:52:27 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:52:27 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:52:29 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:52:29 | 耗时 102 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:52:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:35 | 耗时 76 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:52:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:35 | 耗时 70 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:52:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:35 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:52:36 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:52:36 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:52:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:36 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:52:36 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:52:36 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:52:36 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:52:36 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:52:37 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 22:52:37 | 耗时 65 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:52:39 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:39 | 耗时 53 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:52:39 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:39 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:52:39 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:39 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:52:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:52:40 | 耗时 431 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:52:40 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:40 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:52:40 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 22:52:40 | 耗时 61 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:52:40 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:52:40 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:52:46 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:52:46 | 耗时 57 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:52:49 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:49 | 耗时 75 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:52:49 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:49 | 耗时 76 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:52:49 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:52:49 | 耗时 73 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:52:49 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:52:49 | 耗时 80 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:52:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:52:49 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:52:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:49 | 耗时 63 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:52:49 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 22:52:49 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:52:51 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 22:52:51 | 耗时 85 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:53:23 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:53:23 | 耗时 98 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:53:23 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:53:23 | 耗时 90 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:53:24 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 22:53:24 | 耗时 86 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:53:24 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:53:24 | 耗时 96 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 22:53:24 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:53:24 | 耗时 54 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 22:53:24 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 22:53:24 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 22:53:24 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:53:24 | 耗时 56 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 22:53:24 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:53:24 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 22:53:25 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 22:53:25 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 22:53:25 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 22:53:25 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 22:53:25 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 22:53:25 | 耗时 60 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:53:29 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 22:53:29 | 耗时 74 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 22:59:44 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608907755123 paused.
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608907755123 shutting down.
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608907755123 paused.
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608907755123 shutdown complete.
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 22:59:45 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 22:59:57 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 22:59:57 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 11612 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 22:59:57 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 22:59:58 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 22:59:58 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 22:59:58 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 22:59:58 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$857d1518] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$876ea5f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 22:59:59 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:00:00 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 23:00:00 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 23:00:00 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 23:00:00 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 23:00:00 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 23:00:00 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2545 ms
2020-12-25 23:00:00 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 23:00:00 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 23:00:00 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 23:00:01 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 23:00:01 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 23:00:02 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 23:00:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 23:00:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 23:00:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 23:00:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 23:00:02 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 23:00:04 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 23:00:04 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 23:00:04 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 23:00:04 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 23:00:04 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 23:00:04 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608908404100'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 23:00:04 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 23:00:04 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 23:00:04 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2c2edbe7
2020-12-25 23:00:04 febs-shiro INFO  main p6spy 2020-12-25 23:00:04 | 耗时 58 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 23:00:11 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 23:00:11 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 23:00:11 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 23:00:11 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 23:00:11 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 23:00:11 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 23:00:12 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 23:00:12 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 23:00:12 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 23:00:12 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 15.447 seconds (JVM running for 17.089)
2020-12-25 23:00:13 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 23:00:13 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 23:00:13 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 23:00:13 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 23:00:13 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 23:00:13 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 23:00:14 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 23:00:14 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 23:00:14 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 3 ms
2020-12-25 23:00:14 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 23:00:14 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 23:00:14 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608907755123"'s failed in-progress jobs.
2020-12-25 23:00:15 febs-shiro INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 23:00:15 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908404100 started.
2020-12-25 23:01:16 febs-shiro INFO  http-nio-8080-exec-4 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 23:01:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:01:16 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:01:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:01:16 | 耗时 101 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 23:01:16 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:01:16 | 耗时 160 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T23:01:16.688+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 23:01:17 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:01:17 | 耗时 87 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:01:17 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:01:17 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:01:17 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:01:17 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:01:18 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:01:18 | 耗时 66 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:01:18 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:01:18 | 耗时 54 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 23:01:18 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:01:18 | 耗时 56 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 23:01:18 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:01:18 | 耗时 52 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 23:01:18 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 23:01:18 | 耗时 133 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T23:01:18.335+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 23:01:18 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:01:18 | 耗时 66 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 23:01:18 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:01:18 | 耗时 83 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 23:01:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:01:20 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:01:20 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:01:20 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:01:20 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:01:20 | 耗时 64 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:01:23 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:01:23 | 耗时 76 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:01:45 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908404100 paused.
2020-12-25 23:01:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 23:01:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 23:01:45 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908404100 shutting down.
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908404100 paused.
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908404100 shutdown complete.
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 23:01:46 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 23:02:01 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 23:02:01 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 8692 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 23:02:01 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 23:02:02 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 23:02:03 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 23:02:03 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 23:02:03 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2020-12-25 23:02:04 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:04 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f1cf47bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:04 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:04 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:04 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:04 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:04 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f3c0d897] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:04 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:05 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:02:05 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 23:02:05 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 23:02:05 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 23:02:05 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 23:02:05 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 23:02:05 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4130 ms
2020-12-25 23:02:06 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 23:02:06 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 23:02:06 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 23:02:07 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 23:02:07 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 23:02:08 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 23:02:08 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 23:02:08 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 23:02:08 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 23:02:08 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 23:02:08 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 23:02:10 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 23:02:10 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 23:02:10 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 23:02:11 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 23:02:11 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 23:02:11 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608908530951'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 23:02:11 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 23:02:11 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 23:02:11 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6f8fb906
2020-12-25 23:02:11 febs-shiro INFO  main p6spy 2020-12-25 23:02:11 | 耗时 60 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 23:02:19 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 23:02:19 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 23:02:19 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 23:02:19 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 23:02:19 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 23:02:19 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 23:02:20 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 23:02:20 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 23:02:20 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 23:02:20 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 20.208 seconds (JVM running for 22.697)
2020-12-25 23:02:21 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 23:02:22 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 23:02:22 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 23:02:22 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 23:02:22 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 23:02:22 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 23:02:22 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 23:02:22 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608908404100"'s failed in-progress jobs.
2020-12-25 23:02:22 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908530951 started.
2020-12-25 23:02:23 febs-shiro INFO  http-nio-8080-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 23:02:23 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 23:02:23 febs-shiro INFO  http-nio-8080-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 5 ms
2020-12-25 23:02:23 febs-shiro INFO  http-nio-8080-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 23:02:24 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 23:02:54 febs-shiro INFO  http-nio-8080-exec-4 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 23:02:54 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:02:54 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:02:54 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:02:54 | 耗时 59 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 23:02:54 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:02:54 | 耗时 138 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T23:02:54.682+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 23:02:54 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:02:54 | 耗时 73 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:02:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:02:55 | 耗时 61 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:02:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:02:55 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:02:55 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:02:55 | 耗时 85 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:02:55 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:02:55 | 耗时 68 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 23:02:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:02:56 | 耗时 56 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 23:02:56 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 23:02:56 | 耗时 126 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T23:02:55.916+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 23:02:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:02:56 | 耗时 53 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 23:02:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:02:56 | 耗时 59 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 23:02:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:02:56 | 耗时 60 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 23:02:57 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:02:57 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:02:57 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:02:57 | 耗时 64 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:02:57 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:02:57 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:03:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:03:07 | 耗时 56 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:03:10 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:03:10 | 耗时 132 ms | SQL 语句：
UPDATE t_car SET carno = '粤AB59851', depname = '广东邮政物流配送服务有限公司', framenumber = 'LFNALU41B16239', MODIFY_TIME = '2020-12-25T23:03:10.365+0800' WHERE carid = 3;
2020-12-25 23:03:10 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 23:03:10 | 耗时 125 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改数据', 423, 'cc.mrbird.febs.system.controller.CarController.updateUser()', ' car: "Car(carId=3, carno=粤AB59851, depname=广东邮政物流配送服务有限公司, framenumber=LFNALU41B16239, cartype=null, colour=null, status=null, page1=null, page2=null, page3=null, page4=null, createTime=null, modifyTime=Fri Dec 25 23:03:10 CST 2020, czname=null, phone=null, openid=null)"', '172.20.10.2', '2020-12-25T23:03:10.649+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 23:03:10 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:03:10 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:03:10 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:03:10 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:03:15 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:03:15 | 耗时 78 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:03:18 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:03:18 | 耗时 150 ms | SQL 语句：
UPDATE t_car SET carno = '粤AB59851', depname = '广东邮政物流配送服务有限公司', framenumber = 'LFNALU41B162391', MODIFY_TIME = '2020-12-25T23:03:18.598+0800' WHERE carid = 3;
2020-12-25 23:03:19 febs-shiro INFO  Febs-Async-Thread3 p6spy 2020-12-25 23:03:19 | 耗时 115 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改数据', 428, 'cc.mrbird.febs.system.controller.CarController.updateUser()', ' car: "Car(carId=3, carno=粤AB59851, depname=广东邮政物流配送服务有限公司, framenumber=LFNALU41B162391, cartype=null, colour=null, status=null, page1=null, page2=null, page3=null, page4=null, createTime=null, modifyTime=Fri Dec 25 23:03:18 CST 2020, czname=null, phone=null, openid=null)"', '172.20.10.2', '2020-12-25T23:03:18.897+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 23:03:19 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:03:19 | 耗时 48 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:03:19 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:03:19 | 耗时 103 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:03:23 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:03:23 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:03:24 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:03:24 | 耗时 48 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:03:25 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:03:25 | 耗时 74 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:03:27 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:03:27 | 耗时 135 ms | SQL 语句：
UPDATE t_car SET carno = '粤AB59851', depname = '广东邮政物流配送服务有限公司', framenumber = '111', MODIFY_TIME = '2020-12-25T23:03:27.396+0800' WHERE carid = 3;
2020-12-25 23:03:27 febs-shiro INFO  Febs-Async-Thread4 p6spy 2020-12-25 23:03:27 | 耗时 117 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改数据', 423, 'cc.mrbird.febs.system.controller.CarController.updateUser()', ' car: "Car(carId=3, carno=粤AB59851, depname=广东邮政物流配送服务有限公司, framenumber=111, cartype=null, colour=null, status=null, page1=null, page2=null, page3=null, page4=null, createTime=null, modifyTime=Fri Dec 25 23:03:27 CST 2020, czname=null, phone=null, openid=null)"', '172.20.10.2', '2020-12-25T23:03:27.695+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 23:03:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:03:27 | 耗时 62 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:03:27 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:03:27 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:03:30 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:03:30 | 耗时 82 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:03:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:03:48 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:03:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:03:48 | 耗时 83 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:03:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:03:48 | 耗时 86 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:03:48 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:03:48 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:03:48 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:03:48 | 耗时 76 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:03:48 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:03:48 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:03:49 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:03:49 | 耗时 49 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:03:49 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:03:49 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:03:49 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:03:49 | 耗时 67 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:03:49 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:03:49 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:03:49 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:03:49 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:03:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:03:49 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:03:49 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:03:49 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:03:49 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:03:49 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:03:50 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:03:50 | 耗时 76 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:03:54 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:03:54 | 耗时 162 ms | SQL 语句：
UPDATE t_car SET carno = '粤AB59851', depname = '广东邮政物流配送服务有限公司', framenumber = '11223', MODIFY_TIME = '2020-12-25T23:03:53.977+0800' WHERE carid = 3;
2020-12-25 23:03:54 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:03:54 | 耗时 90 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:03:54 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:03:54 | 耗时 67 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:03:54 febs-shiro INFO  Febs-Async-Thread5 p6spy 2020-12-25 23:03:54 | 耗时 164 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改数据', 416, 'cc.mrbird.febs.system.controller.CarController.updateUser()', ' car: "Car(carId=3, carno=粤AB59851, depname=广东邮政物流配送服务有限公司, framenumber=11223, cartype=null, colour=null, status=null, page1=null, page2=null, page3=null, page4=null, createTime=null, modifyTime=Fri Dec 25 23:03:53 CST 2020, czname=null, phone=null, openid=null)"', '172.20.10.2', '2020-12-25T23:03:54.266+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 23:04:21 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:04:21 | 耗时 51 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:04:21 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:04:21 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:04:21 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:04:21 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:04:21 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:04:21 | 耗时 51 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:04:21 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:04:21 | 耗时 75 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:04:21 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:04:21 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:04:22 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:04:22 | 耗时 56 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:04:22 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:04:22 | 耗时 61 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:04:22 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:04:22 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:04:22 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:04:22 | 耗时 69 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:04:23 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:04:23 | 耗时 81 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:04:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:04:28 | 耗时 155 ms | SQL 语句：
UPDATE t_car SET carno = '粤AB59851', depname = '广东邮政物流配送服务有限公司嗯', framenumber = '11223', MODIFY_TIME = '2020-12-25T23:04:28.245+0800' WHERE carid = 3;
2020-12-25 23:04:28 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 23:04:28 | 耗时 125 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改数据', 465, 'cc.mrbird.febs.system.controller.CarController.updateUser()', ' car: "Car(carId=3, carno=粤AB59851, depname=广东邮政物流配送服务有限公司嗯, framenumber=11223, cartype=null, colour=null, status=null, page1=null, page2=null, page3=null, page4=null, createTime=null, modifyTime=Fri Dec 25 23:04:28 CST 2020, czname=null, phone=null, openid=null)"', '172.20.10.2', '2020-12-25T23:04:28.545+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 23:04:28 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:04:28 | 耗时 70 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:04:28 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:04:28 | 耗时 67 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:04:40 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:04:40 | 耗时 73 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:04:40 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:04:40 | 耗时 76 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:04:40 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:04:40 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:04:41 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:04:41 | 耗时 59 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:04:41 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:04:41 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:04:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:04:41 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:04:41 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:04:41 | 耗时 48 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:04:42 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:04:42 | 耗时 74 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:04:45 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:04:45 | 耗时 116 ms | SQL 语句：
UPDATE t_car SET carno = '粤AB59851', depname = '广东邮政物流配送服务有限公司', framenumber = '11223', MODIFY_TIME = '2020-12-25T23:04:45.796+0800' WHERE carid = 3;
2020-12-25 23:04:46 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:04:46 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:04:46 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 23:04:46 | 耗时 119 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改数据', 362, 'cc.mrbird.febs.system.controller.CarController.updateUser()', ' car: "Car(carId=3, carno=粤AB59851, depname=广东邮政物流配送服务有限公司, framenumber=11223, cartype=null, colour=null, status=null, page1=null, page2=null, page3=null, page4=null, createTime=null, modifyTime=Fri Dec 25 23:04:45 CST 2020, czname=null, phone=null, openid=null)"', '172.20.10.2', '2020-12-25T23:04:46.037+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 23:04:46 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:04:46 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:04:48 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:04:48 | 耗时 50 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:04:52 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:04:52 | 耗时 53 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:05:08 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:05:08 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:05:08 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:05:08 | 耗时 71 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:05:09 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:05:09 | 耗时 79 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:05:15 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:05:15 | 耗时 147 ms | SQL 语句：
UPDATE t_car SET carno = '粤AB59851', depname = '广东邮政物流配送服务有限公司', framenumber = '156785655656', MODIFY_TIME = '2020-12-25T23:05:15.195+0800' WHERE carid = 3;
2020-12-25 23:05:15 febs-shiro INFO  Febs-Async-Thread3 p6spy 2020-12-25 23:05:15 | 耗时 118 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改数据', 375, 'cc.mrbird.febs.system.controller.CarController.updateUser()', ' car: "Car(carId=3, carno=粤AB59851, depname=广东邮政物流配送服务有限公司, framenumber=156785655656, cartype=null, colour=null, status=null, page1=null, page2=null, page3=null, page4=null, createTime=null, modifyTime=Fri Dec 25 23:05:15 CST 2020, czname=null, phone=null, openid=null)"', '172.20.10.2', '2020-12-25T23:05:15.456+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 23:05:15 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:05:15 | 耗时 61 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:05:15 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:05:15 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:06:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:06:06 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:06:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:06:06 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:06:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:06:06 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:06:07 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:06:07 | 耗时 62 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:06:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:06:07 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:06:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:06:07 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:06:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:06:07 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:08:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:08:07 | 耗时 66 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:08:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:08:07 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:08:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:08:07 | 耗时 49 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:08:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:08:07 | 耗时 49 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:08:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:08:07 | 耗时 72 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:08:07 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:08:07 | 耗时 66 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:08:08 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:08:08 | 耗时 60 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:08:08 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:08:08 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:08:08 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:08:08 | 耗时 64 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:08:08 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:08:08 | 耗时 70 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:08:10 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:08:10 | 耗时 48 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:08:10 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:08:10 | 耗时 67 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:08:10 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:08:10 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:08:11 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:08:11 | 耗时 64 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:08:11 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:08:11 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:08:11 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:08:11 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:08:11 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:08:11 | 耗时 63 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:09:14 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:09:14 | 耗时 81 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:09:15 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:09:15 | 耗时 80 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:09:15 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:09:15 | 耗时 73 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:09:15 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:09:15 | 耗时 62 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:09:15 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:09:15 | 耗时 51 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:09:15 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:09:15 | 耗时 100 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:09:15 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:09:15 | 耗时 64 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:09:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:09:32 | 耗时 67 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:09:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:09:32 | 耗时 63 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:09:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:09:32 | 耗时 96 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:09:32 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:09:32 | 耗时 52 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:09:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:09:32 | 耗时 62 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:09:32 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:09:32 | 耗时 67 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:09:33 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:09:33 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:10:26 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:10:26 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:10:26 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:10:26 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:10:26 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:10:26 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:10:26 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:10:26 | 耗时 68 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:10:28 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:10:28 | 耗时 80 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:10:29 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:10:29 | 耗时 64 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:10:29 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:10:29 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:10:29 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:10:29 | 耗时 54 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:10:35 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908530951 paused.
2020-12-25 23:10:35 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'scheduleJobExecutorService'
2020-12-25 23:10:35 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-12-25 23:10:35 febs-shiro INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-12-25 23:10:35 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908530951 shutting down.
2020-12-25 23:10:35 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908530951 paused.
2020-12-25 23:10:35 febs-shiro INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608908530951 shutdown complete.
2020-12-25 23:10:36 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-12-25 23:10:36 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-12-25 23:10:36 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-12-25 23:10:36 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-12-25 23:10:36 febs-shiro INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-12-25 23:10:36 febs-shiro INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-12-25 23:10:51 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication using Java 1.8.0_181 on LAPTOP-2ADCHJEL with PID 15240 (D:\PROJECT\Backcarmanagement\target\classes started by Lenovo in D:\PROJECT\Backcarmanagement)
2020-12-25 23:10:51 febs-shiro INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-12-25 23:10:51 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-12-25 23:10:52 febs-shiro INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c379e358] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c56b7430] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:53 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:54 febs-shiro INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-25 23:10:54 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-12-25 23:10:54 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-12-25 23:10:54 febs-shiro INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-12-25 23:10:54 febs-shiro INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-25 23:10:54 febs-shiro INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-12-25 23:10:54 febs-shiro INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 2774 ms
2020-12-25 23:10:54 febs-shiro INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-12-25 23:10:54 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-12-25 23:10:54 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-12-25 23:10:55 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-12-25 23:10:55 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-12-25 23:10:56 febs-shiro INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-12-25 23:10:56 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-12-25 23:10:56 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-12-25 23:10:56 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-12-25 23:10:56 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-12-25 23:10:56 febs-shiro INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-12-25 23:10:58 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-12-25 23:10:58 febs-shiro INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-12-25 23:10:58 febs-shiro INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-12-25 23:10:58 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-12-25 23:10:58 febs-shiro INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-12-25 23:10:58 febs-shiro INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-2ADCHJEL1608909058279'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-12-25 23:10:58 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-12-25 23:10:58 febs-shiro INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-12-25 23:10:58 febs-shiro INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5d84b088
2020-12-25 23:10:58 febs-shiro INFO  main p6spy 2020-12-25 23:10:58 | 耗时 89 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-12-25 23:11:05 febs-shiro INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-25 23:11:05 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 23:11:05 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-12-25 23:11:05 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-12-25 23:11:05 febs-shiro INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-12-25 23:11:05 febs-shiro INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-12-25 23:11:06 febs-shiro INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-12-25 23:11:06 febs-shiro INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-12-25 23:11:06 febs-shiro INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-25 23:11:06 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-12-25 23:11:06 febs-shiro INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 5 ms
2020-12-25 23:11:06 febs-shiro INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-12-25 23:11:06 febs-shiro INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-12-25 23:11:06 febs-shiro INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 15.52 seconds (JVM running for 17.192)
2020-12-25 23:11:06 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:11:06 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:11:06 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:11:06 | 耗时 82 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:11:06 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:11:06 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:11:07 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-12-25 23:11:07 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:11:07 | 耗时 56 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:11:07 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-12-25 23:11:07 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-12-25 23:11:07 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-12-25 23:11:07 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-12-25 23:11:07 febs-shiro INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner FEBS权限系统启动完毕，系统编译打包时间：2020-12-24 09:29:25，地址：http://172.20.10.2:8080/login
2020-12-25 23:11:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:11:07 | 耗时 68 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:11:07 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:11:07 | 耗时 70 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:11:07 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:11:07 | 耗时 52 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:11:08 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-12-25 23:11:08 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-2ADCHJEL1608908530951"'s failed in-progress jobs.
2020-12-25 23:11:08 febs-shiro INFO  http-nio-8080-exec-5 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_get_captcha172.20.10.2]，描述为 [获取验证码] 的接口
2020-12-25 23:11:08 febs-shiro INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-2ADCHJEL1608909058279 started.
2020-12-25 23:11:33 febs-shiro INFO  http-nio-8080-exec-1 cc.mrbird.febs.common.aspect.LimitAspect IP:172.20.10.2 第 1 次访问key为 [limit_login172.20.10.2]，描述为 [登录接口] 的接口
2020-12-25 23:11:33 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:11:33 | 耗时 98 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Mrbird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:11:34 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:11:34 | 耗时 169 ms | SQL 语句：
SELECT USER_ID, dept_id FROM t_user_data_permission WHERE (USER_ID = '1');
2020-12-25 23:11:34 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:11:34 | 耗时 164 ms | SQL 语句：
INSERT INTO t_login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('Mrbird', '2020-12-25T23:11:34.061+0800', '内网IP|0|0|内网IP|内网IP', '172.20.10.2', 'Windows 10', 'Firefox 84');
2020-12-25 23:11:34 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:11:34 | 耗时 73 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:11:34 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:11:34 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:11:34 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:11:34 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:11:35 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:11:35 | 耗时 77 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:11:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:11:35 | 耗时 69 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-12-25 23:11:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:11:35 | 耗时 63 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 23:11:35 febs-shiro INFO  Febs-Async-Thread1 p6spy 2020-12-25 23:11:35 | 耗时 127 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-12-25T23:11:35.184+0800' WHERE (USERNAME = 'MrBird');
2020-12-25 23:11:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:11:35 | 耗时 66 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-12-25 23:11:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:11:35 | 耗时 73 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-12-25 23:11:35 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:11:35 | 耗时 64 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'MrBird' GROUP BY days;
2020-12-25 23:11:36 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:11:36 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:11:36 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:11:36 | 耗时 84 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:11:36 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:11:36 | 耗时 70 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:12:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:12:44 | 耗时 201 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:12:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:12:44 | 耗时 76 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:12:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:12:44 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:12:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:12:44 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:12:44 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:12:44 | 耗时 71 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:12:44 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:12:44 | 耗时 75 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:12:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:12:44 | 耗时 88 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:13:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:13:32 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:13:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:13:32 | 耗时 55 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:13:32 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:13:32 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:13:32 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:13:32 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:13:32 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:13:32 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:13:32 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:13:32 | 耗时 75 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:13:33 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:13:33 | 耗时 68 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:13:33 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:13:33 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:13:33 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:13:33 | 耗时 62 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:13:51 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:13:51 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:13:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:13:52 | 耗时 88 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:13:52 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:13:52 | 耗时 49 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:13:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:13:52 | 耗时 88 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:13:52 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:13:52 | 耗时 69 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:13:52 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:13:52 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:13:52 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:13:52 | 耗时 72 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:14:25 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:14:25 | 耗时 53 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:14:25 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:14:25 | 耗时 67 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:14:25 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:14:25 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:14:26 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:14:26 | 耗时 64 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:14:26 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:14:26 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:14:26 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:14:26 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:14:26 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:14:26 | 耗时 73 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:14:47 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:14:47 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:14:47 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:14:47 | 耗时 67 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:14:47 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:14:47 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:14:47 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:14:47 | 耗时 64 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:14:48 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:14:48 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:14:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:14:48 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:14:48 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:14:48 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:15:12 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:15:12 | 耗时 58 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:15:12 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:15:12 | 耗时 56 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:15:12 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:15:12 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:15:12 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:15:12 | 耗时 107 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:15:12 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:15:12 | 耗时 96 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:15:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:15:13 | 耗时 71 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:15:13 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:15:13 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:16:06 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:16:06 | 耗时 60 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:16:06 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:16:06 | 耗时 95 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:16:06 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:16:06 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:16:07 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:16:07 | 耗时 84 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:16:07 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:16:07 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:16:07 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:16:07 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:16:07 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:16:07 | 耗时 64 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:16:23 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:16:23 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:16:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:16:24 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:16:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:16:24 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:16:24 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:16:24 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:16:24 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:16:24 | 耗时 73 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:16:24 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:16:24 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:16:24 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:16:24 | 耗时 66 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:20:19 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:20:19 | 耗时 65 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:20:19 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:20:19 | 耗时 51 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:20:19 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:20:19 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:20:19 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:20:19 | 耗时 72 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:20:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:20:20 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:20:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:20:20 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:20:20 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:20:20 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:23:09 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:23:09 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:23:09 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:23:09 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:23:09 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:23:09 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:23:10 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:23:10 | 耗时 51 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:23:10 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:23:10 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:23:10 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:23:10 | 耗时 60 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:23:10 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:23:10 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:23:35 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:23:35 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:23:35 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:23:35 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:23:35 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:23:35 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:23:36 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:23:36 | 耗时 67 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:23:36 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:23:36 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:23:36 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:23:36 | 耗时 65 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:23:36 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:23:36 | 耗时 58 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:23:54 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:23:54 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:23:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:23:55 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:23:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:23:55 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:23:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:23:55 | 耗时 73 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:23:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:23:55 | 耗时 69 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:23:55 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:23:55 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:23:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:23:55 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:23:55 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:23:55 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:23:55 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:23:55 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:23:56 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:23:56 | 耗时 52 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:23:56 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:23:56 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:23:56 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:23:56 | 耗时 73 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:23:56 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:23:56 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:25:02 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:25:02 | 耗时 52 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:25:02 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:25:02 | 耗时 51 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:25:02 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:25:02 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:25:02 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:25:02 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:25:02 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:25:02 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:25:02 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:25:02 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:25:02 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:25:02 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:25:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:25:24 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:25:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:25:24 | 耗时 59 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:25:24 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:25:24 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:25:24 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:25:24 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:25:25 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:25:25 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:25:25 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:25:25 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:25:25 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:25:25 | 耗时 50 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:29:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:29:13 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:29:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:29:13 | 耗时 49 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:29:13 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:29:13 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:29:14 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:29:14 | 耗时 59 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:29:14 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:29:14 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:29:14 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:29:14 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:29:14 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:29:14 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:29:54 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:29:54 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:29:54 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:29:54 | 耗时 55 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:29:55 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:29:55 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:29:55 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:29:55 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:29:55 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:29:55 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:29:55 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:29:55 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:29:55 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:29:55 | 耗时 50 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:30:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:30:41 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:30:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:30:41 | 耗时 51 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:30:41 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:30:41 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:30:42 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:30:42 | 耗时 76 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:30:42 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:30:42 | 耗时 71 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:30:42 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:30:42 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:30:42 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:30:42 | 耗时 50 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:31:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:31:20 | 耗时 59 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:31:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:31:20 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:31:20 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:31:20 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:31:20 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:31:20 | 耗时 62 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:31:20 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:31:20 | 耗时 68 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:31:21 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:31:21 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:31:21 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:31:21 | 耗时 64 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:32:53 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:32:53 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:32:53 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:32:53 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:32:53 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:32:53 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:32:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:32:53 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:32:53 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:32:53 | 耗时 52 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:32:53 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:32:53 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:32:54 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:32:54 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:34:22 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:34:22 | 耗时 65 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:34:22 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:34:22 | 耗时 72 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:34:22 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:34:22 | 耗时 89 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:34:23 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:34:23 | 耗时 57 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:34:23 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:34:23 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:34:23 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:34:23 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:34:23 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:34:23 | 耗时 63 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:34:24 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:34:24 | 耗时 50 ms | SQL 语句：
SELECT carid, carno, depname, framenumber, cartype, colour, status, page1, page2, page3, page4, CREATE_TIME, MODIFY_TIME, czname, phone, openid FROM t_car WHERE carid = '3';
2020-12-25 23:34:28 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:34:28 | 耗时 141 ms | SQL 语句：
UPDATE t_car SET carno = '粤AB5985', depname = '广东邮政物流配送服务有限公司', framenumber = '156785655656', MODIFY_TIME = '2020-12-25T23:34:28.344+0800' WHERE carid = 3;
2020-12-25 23:34:28 febs-shiro INFO  Febs-Async-Thread2 p6spy 2020-12-25 23:34:28 | 耗时 136 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改数据', 465, 'cc.mrbird.febs.system.controller.CarController.updateUser()', ' car: "Car(carId=3, carno=粤AB5985, depname=广东邮政物流配送服务有限公司, framenumber=156785655656, cartype=null, colour=null, status=null, page1=null, page2=null, page3=null, page4=null, createTime=null, modifyTime=Fri Dec 25 23:34:28 CST 2020, czname=null, phone=null, openid=null)"', '172.20.10.2', '2020-12-25T23:34:28.633+0800', '内网IP|0|0|内网IP|内网IP');
2020-12-25 23:34:28 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:34:28 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:34:28 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:34:28 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:35:14 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:35:14 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:35:14 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:35:14 | 耗时 72 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:35:14 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:35:14 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:35:15 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:35:15 | 耗时 63 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:35:15 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:35:15 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:35:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:35:15 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:35:15 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:35:15 | 耗时 51 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:35:59 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:35:59 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:35:59 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:35:59 | 耗时 65 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:36:00 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:36:00 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:36:00 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:36:00 | 耗时 68 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:36:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:36:00 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:36:00 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:36:00 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:36:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:36:00 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:36:30 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:36:30 | 耗时 53 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:36:30 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:36:30 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:36:30 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:36:30 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:36:31 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:36:31 | 耗时 51 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:36:31 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:36:31 | 耗时 55 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:36:31 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:36:31 | 耗时 69 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:36:31 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:36:31 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:36:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:36:52 | 耗时 80 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:36:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:36:52 | 耗时 65 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:36:52 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:36:52 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:36:53 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:36:53 | 耗时 71 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:36:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:36:53 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:36:53 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:36:53 | 耗时 52 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:36:53 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:36:53 | 耗时 54 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:37:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:37:06 | 耗时 71 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:37:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:37:06 | 耗时 52 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:37:06 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:37:06 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:37:07 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:37:07 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:37:07 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:37:07 | 耗时 69 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:37:07 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:37:07 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:37:07 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:37:07 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:37:22 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:37:22 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:37:22 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:37:22 | 耗时 73 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:37:22 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:37:22 | 耗时 83 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:37:23 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:37:23 | 耗时 66 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:37:23 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:37:23 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:37:23 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:37:23 | 耗时 70 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:37:23 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:37:23 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:37:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:37:32 | 耗时 64 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:37:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:37:32 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:37:32 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:37:32 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:37:32 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:37:32 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:37:32 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:37:32 | 耗时 71 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:37:32 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:37:32 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:37:33 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:37:33 | 耗时 59 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:37:35 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:37:35 | 耗时 62 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:37:35 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:37:35 | 耗时 77 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:37:36 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:37:36 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:37:36 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:37:36 | 耗时 80 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:37:36 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:37:36 | 耗时 71 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:37:36 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:37:36 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:37:36 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:37:36 | 耗时 76 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:37:43 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:37:43 | 耗时 58 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:37:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:37:44 | 耗时 49 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:37:44 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:37:44 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:37:44 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:37:44 | 耗时 88 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:37:44 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:37:44 | 耗时 67 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:37:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:37:44 | 耗时 60 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:37:44 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:37:44 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:37:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:37:55 | 耗时 60 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:37:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:37:55 | 耗时 54 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:37:55 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:37:55 | 耗时 76 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:37:56 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:37:56 | 耗时 56 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:37:56 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:37:56 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:37:56 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:37:56 | 耗时 56 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:37:56 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:37:56 | 耗时 61 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:38:14 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:38:14 | 耗时 53 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:38:15 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:38:15 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:38:15 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:38:15 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:38:15 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:38:15 | 耗时 78 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:38:15 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:38:15 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:38:15 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:38:15 | 耗时 59 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:38:15 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:38:15 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:39:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:39:17 | 耗时 66 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:39:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:39:17 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:39:17 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:39:17 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:39:17 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:39:17 | 耗时 64 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:39:17 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:39:17 | 耗时 70 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:39:17 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:39:17 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:39:17 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:39:17 | 耗时 63 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:39:40 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:39:40 | 耗时 80 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:39:40 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:39:40 | 耗时 72 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:39:40 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:39:40 | 耗时 77 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:39:40 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:39:40 | 耗时 63 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:39:40 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:39:40 | 耗时 60 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:39:40 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:39:40 | 耗时 56 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:39:40 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:39:40 | 耗时 71 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:41:58 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:41:58 | 耗时 54 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:41:58 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:41:58 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:41:58 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:41:58 | 耗时 86 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:41:58 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:41:58 | 耗时 60 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:41:59 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:41:59 | 耗时 53 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:41:59 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:41:59 | 耗时 68 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:41:59 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:41:59 | 耗时 68 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:42:36 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:42:36 | 耗时 66 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:42:36 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:42:36 | 耗时 55 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:42:36 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:42:36 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:42:37 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:42:37 | 耗时 58 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:42:37 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:42:37 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:42:37 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:42:37 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:42:37 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:42:37 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:43:04 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:43:04 | 耗时 57 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:43:04 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:43:04 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:43:04 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:43:04 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:43:05 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:43:05 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:43:05 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:43:05 | 耗时 73 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:43:05 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:43:05 | 耗时 73 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:43:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:43:05 | 耗时 74 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:43:05 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:43:05 | 耗时 50 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:43:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:43:05 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:43:05 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:43:05 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:43:06 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:43:06 | 耗时 66 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:43:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:43:06 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:43:06 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:43:06 | 耗时 56 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:43:06 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:43:06 | 耗时 60 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:43:59 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:43:59 | 耗时 78 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:43:59 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:43:59 | 耗时 77 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:44:00 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:44:00 | 耗时 73 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:44:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:44:00 | 耗时 66 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:44:00 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:44:00 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:44:00 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:44:00 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:44:00 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:44:00 | 耗时 54 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:44:00 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:44:00 | 耗时 50 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:44:00 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:44:00 | 耗时 60 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:45:03 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:45:03 | 耗时 76 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:45:03 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:45:03 | 耗时 72 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:45:03 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:45:03 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:45:03 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:45:03 | 耗时 60 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:45:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:45:03 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:45:03 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:45:03 | 耗时 58 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:45:03 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:45:03 | 耗时 55 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:45:44 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:45:44 | 耗时 56 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:45:44 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:45:44 | 耗时 55 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:45:44 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:45:44 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:45:44 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:45:44 | 耗时 52 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:45:45 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:45:45 | 耗时 62 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:45:45 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:45:45 | 耗时 53 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:45:45 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:45:45 | 耗时 65 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:46:01 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:46:01 | 耗时 55 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:46:01 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:46:01 | 耗时 63 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:46:01 febs-shiro INFO  http-nio-8080-exec-3 p6spy 2020-12-25 23:46:01 | 耗时 80 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:46:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:46:01 | 耗时 62 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:46:01 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:46:01 | 耗时 75 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:46:01 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:46:01 | 耗时 55 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:46:01 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:46:01 | 耗时 61 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:46:17 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:46:17 | 耗时 851 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:46:17 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:46:17 | 耗时 185 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:46:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:46:18 | 耗时 61 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:46:18 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:46:18 | 耗时 68 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:46:18 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:46:18 | 耗时 60 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:46:18 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:46:18 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:46:18 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:46:18 | 耗时 66 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:46:18 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:46:18 | 耗时 65 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:46:18 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:46:18 | 耗时 63 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:46:19 febs-shiro INFO  http-nio-8080-exec-1 p6spy 2020-12-25 23:46:19 | 耗时 57 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:46:21 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:46:21 | 耗时 81 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:46:21 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:46:21 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:46:21 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:46:21 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:46:22 febs-shiro INFO  http-nio-8080-exec-5 p6spy 2020-12-25 23:46:22 | 耗时 70 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:46:22 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:46:22 | 耗时 89 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:46:22 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:46:22 | 耗时 83 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:46:22 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:46:22 | 耗时 205 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:52:43 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:52:43 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:52:43 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:52:43 | 耗时 62 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:52:43 febs-shiro INFO  http-nio-8080-exec-10 p6spy 2020-12-25 23:52:43 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:52:44 febs-shiro INFO  http-nio-8080-exec-7 p6spy 2020-12-25 23:52:44 | 耗时 74 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:52:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:52:44 | 耗时 58 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:52:44 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:52:44 | 耗时 71 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:52:44 febs-shiro INFO  http-nio-8080-exec-2 p6spy 2020-12-25 23:52:44 | 耗时 49 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
2020-12-25 23:53:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:53:01 | 耗时 63 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-12-25 23:53:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:53:01 | 耗时 53 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-12-25 23:53:01 febs-shiro INFO  http-nio-8080-exec-6 p6spy 2020-12-25 23:53:01 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-12-25 23:53:02 febs-shiro INFO  http-nio-8080-exec-4 p6spy 2020-12-25 23:53:02 | 耗时 52 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-12-25 23:53:02 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:53:02 | 耗时 65 ms | SQL 语句：
SELECT COUNT(1) FROM t_car t WHERE 1 = 1;
2020-12-25 23:53:02 febs-shiro INFO  http-nio-8080-exec-8 p6spy 2020-12-25 23:53:02 | 耗时 65 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept;
2020-12-25 23:53:02 febs-shiro INFO  http-nio-8080-exec-9 p6spy 2020-12-25 23:53:02 | 耗时 78 ms | SQL 语句：
SELECT t.carid, t.carno, t.depname, t.framenumber, t.cartype, t.colour, t.status, t.page1, t.page2, t.page3, t.page4 FROM t_car t WHERE 1 = 1 ORDER BY carId ASC LIMIT 0,10;
